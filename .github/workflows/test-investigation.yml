name: Test Investigation

on:
  workflow_dispatch:
  push:
    branches: [ test-investigation ]

jobs:
  investigate-python-tests:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.11']
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies (Unix)
      if: matrix.os != 'windows-latest'
      working-directory: ./python
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-cov
        pip install posix-ipc
        pip install -e .
    
    - name: Install dependencies (Windows)
      if: matrix.os == 'windows-latest'
      working-directory: ./python
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-cov
        pip install pywin32
        pip install -e .
    
    - name: Test Type Tests
      working-directory: ./python
      continue-on-error: true
      run: |
        echo "=== Testing Type Tests ==="
        pytest tests/test_zerobuffer.py::TestTypes -v
    
    - name: Test Reader/Writer Creation
      working-directory: ./python
      continue-on-error: true
      run: |
        echo "=== Testing Reader/Writer Creation ==="
        pytest tests/test_zerobuffer.py::TestReaderWriter -v -x
    
    - name: Test Frame Operations
      working-directory: ./python
      continue-on-error: true
      run: |
        echo "=== Testing Frame Operations ==="
        pytest tests/test_zerobuffer.py::TestFrameOperations -v -x
    
    - name: Test Edge Cases
      working-directory: ./python
      continue-on-error: true
      run: |
        echo "=== Testing Edge Cases ==="
        pytest tests/test_zerobuffer.py::TestEdgeCases -v -x
    
    - name: Test Concurrency
      working-directory: ./python
      continue-on-error: true
      run: |
        echo "=== Testing Concurrency ==="
        pytest tests/test_zerobuffer.py::TestConcurrency -v -x
    
    - name: Test Memory Views
      working-directory: ./python
      continue-on-error: true
      run: |
        echo "=== Testing Memory Views ==="
        pytest tests/test_zerobuffer.py::TestMemoryViews -v -x
    
    - name: Test Scenarios - Basic
      working-directory: ./python
      continue-on-error: true
      run: |
        echo "=== Testing Basic Scenarios ==="
        pytest tests/test_scenarios.py::TestScenario1BasicDataTransfer -v -x
    
    - name: Test Scenarios - Streaming
      working-directory: ./python
      continue-on-error: true
      run: |
        echo "=== Testing Streaming Scenarios ==="
        pytest tests/test_scenarios.py::TestScenario2ContinuousStreaming -v -x
    
    - name: Test Scenarios - Buffer Full
      working-directory: ./python
      continue-on-error: true
      run: |
        echo "=== Testing Buffer Full Scenarios ==="
        pytest tests/test_scenarios.py::TestScenario3BufferFullCondition -v -x
    
    - name: Test Scenarios - Multiprocess
      working-directory: ./python
      continue-on-error: true
      run: |
        echo "=== Testing Multiprocess Scenarios ==="
        pytest tests/test_scenarios.py::TestScenario9MultiProcess -v -x
    
    - name: Run all tests with detailed output
      working-directory: ./python
      continue-on-error: true
      run: |
        echo "=== Running All Tests ==="
        pytest tests/ -v --tb=short --durations=10 -x || true
        
    - name: Summary
      if: always()
      run: |
        echo "Test investigation complete for ${{ matrix.os }} Python ${{ matrix.python-version }}"