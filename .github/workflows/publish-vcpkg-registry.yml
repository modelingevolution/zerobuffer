name: Publish vcpkg Registry

on:
  push:
    tags:
      - 'v*.*.*'
      - 'cpp-v*.*.*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (e.g., 1.0.0)'
        required: true
        type: string

permissions:
  contents: write

jobs:
  publish-registry:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout zerobuffer
      uses: actions/checkout@v4

    - name: Set version
      id: version
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          VERSION="${{ github.event.inputs.version }}"
        else
          VERSION="${GITHUB_REF#refs/tags/}"
          VERSION="${VERSION#v}"
          VERSION="${VERSION#cpp-v}"
        fi
        echo "VERSION=$VERSION" >> $GITHUB_ENV
        echo "version=$VERSION" >> $GITHUB_OUTPUT

    - name: Create registry repository structure
      run: |
        # Create temporary directory for registry
        mkdir -p registry-repo/ports/zerobuffer
        mkdir -p registry-repo/versions/z-
        
        # Copy port files
        cp -r vcpkg-port/zerobuffer/* registry-repo/ports/zerobuffer/
        
        # Update version in port files
        sed -i "s/\"version\": \"[^\"]*\"/\"version\": \"$VERSION\"/" registry-repo/ports/zerobuffer/vcpkg.json

    - name: Calculate git-tree SHA
      id: git-tree
      run: |
        cd registry-repo
        git init
        git add ports/zerobuffer
        git -c user.name="GitHub Actions" -c user.email="actions@github.com" commit -m "Add zerobuffer port"
        GIT_TREE=$(git rev-parse HEAD:ports/zerobuffer)
        echo "GIT_TREE=$GIT_TREE" >> $GITHUB_ENV
        echo "git-tree=$GIT_TREE" >> $GITHUB_OUTPUT

    - name: Create baseline.json
      run: |
        cat > registry-repo/versions/baseline.json << EOF
        {
          "default": {
            "zerobuffer": {
              "baseline": "$VERSION",
              "port-version": 0
            }
          }
        }
        EOF

    - name: Create version database
      run: |
        cat > registry-repo/versions/z-/zerobuffer.json << EOF
        {
          "versions": [
            {
              "version": "$VERSION",
              "port-version": 0,
              "git-tree": "$GIT_TREE"
            }
          ]
        }
        EOF

    - name: Create registry README
      run: |
        cat > registry-repo/README.md << 'EOF'
        # ZeroBuffer vcpkg Registry
        
        Custom vcpkg registry for ZeroBuffer - a high-performance zero-copy IPC library.
        
        ## Usage
        
        Add to your `vcpkg-configuration.json`:
        
        ```json
        {
          "registries": [
            {
              "kind": "git",
              "repository": "https://github.com/modelingevolution/zerobuffer-vcpkg-registry",
              "baseline": "<BASELINE_COMMIT_SHA>",
              "packages": ["zerobuffer"]
            }
          ]
        }
        ```
        
        Replace `<BASELINE_COMMIT_SHA>` with the latest commit SHA from this repository.
        
        Then install:
        ```bash
        vcpkg install zerobuffer
        ```
        
        ## Finding the Baseline
        
        To get the latest baseline commit SHA:
        ```bash
        git ls-remote https://github.com/modelingevolution/zerobuffer-vcpkg-registry HEAD
        ```
        
        Or check the [latest commit](https://github.com/modelingevolution/zerobuffer-vcpkg-registry/commits/main) on GitHub.
        EOF

    - name: Push to registry repository
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        cd registry-repo
        git add .
        git -c user.name="GitHub Actions" -c user.email="actions@github.com" commit -m "Update zerobuffer to version $VERSION"
        
        # Clone or create the registry repository
        git clone https://github.com/modelingevolution/zerobuffer-vcpkg-registry.git ../existing-registry || {
          echo "Registry repo doesn't exist, will create it"
          gh repo create modelingevolution/zerobuffer-vcpkg-registry --public --description "vcpkg registry for ZeroBuffer"
          git remote add origin https://github.com/modelingevolution/zerobuffer-vcpkg-registry.git
          git branch -M main
          git push -u origin main
        }
        
        # If repo existed, update it
        if [ -d ../existing-registry ]; then
          cp -r * ../existing-registry/
          cd ../existing-registry
          git add .
          git -c user.name="GitHub Actions" -c user.email="actions@github.com" commit -m "Update zerobuffer to version $VERSION" || echo "No changes to commit"
          git push
        fi

    - name: Get final baseline commit
      id: baseline
      run: |
        if [ -d ../existing-registry ]; then
          cd ../existing-registry
        else
          cd registry-repo
        fi
        BASELINE_SHA=$(git rev-parse HEAD)
        echo "BASELINE_SHA=$BASELINE_SHA" >> $GITHUB_ENV
        echo "baseline-sha=$BASELINE_SHA" >> $GITHUB_OUTPUT

    - name: Create release notes
      run: |
        cat > release-notes.md << EOF
        ## ZeroBuffer v$VERSION - vcpkg Registry Update
        
        The vcpkg registry has been updated with ZeroBuffer v$VERSION.
        
        ### Installation
        
        Add to your \`vcpkg-configuration.json\`:
        \`\`\`json
        {
          "registries": [
            {
              "kind": "git",
              "repository": "https://github.com/modelingevolution/zerobuffer-vcpkg-registry",
              "baseline": "$BASELINE_SHA",
              "packages": ["zerobuffer"]
            }
          ]
        }
        \`\`\`
        
        Then install:
        \`\`\`bash
        vcpkg install zerobuffer
        \`\`\`
        
        ### Baseline Commit
        
        This release's baseline: \`$BASELINE_SHA\`
        EOF