// <auto-generated />
using System;
using System.Text.Json;
using System.Threading.Tasks;
using Xunit;
using Xunit.Abstractions;
using ModelingEvolution.Harmony.Core;
using ModelingEvolution.Harmony.Execution;
using ModelingEvolution.Harmony.ProcessManagement;
using Microsoft.Extensions.Logging.Abstractions;
using ZeroBuffer.Harmony.Tests;

namespace ZeroBuffer.Harmony.Tests.Csharp_Csharp;

public class InitializationTests : HarmonyTestBase
{
    public InitializationTests(ITestOutputHelper output) : base(output) { }

    [Fact(DisplayName = "Test 4.3 - Zero Metadata Configuration [reader=csharp, writer=csharp]")]
    [Trait("Scenario", "Test 4.3 - Zero Metadata Configuration")]
    [Trait("Platform", "csharp/csharp")]
    [Trait("Uses", "csharp")]
    [Trait("Feature", "Initialization")]    public async Task Test_4_3_Zero_Metadata_Configuration_reader_csharp_writer_csharp()
    {
        const string scenarioJson = @"{""TestId"":""csharp-csharp-test-4-3---zero-metadata-configuration"",""ScenarioName"":""Test 4.3 - Zero Metadata Configuration"",""ScenarioDescription"":null,""Tags"":[],""Platforms"":{""reader"":""csharp"",""writer"":""csharp""},""Background"":[{""Type"":""Given"",""Text"":""the test mode is configured"",""Process"":null,""ProcessedText"":""the test mode is configured"",""Parameters"":{}}],""Steps"":[{""Type"":""Given"",""Text"":""the reader is \u0027csharp\u0027"",""Process"":""reader"",""ProcessedText"":"""",""Parameters"":{}},{""Type"":""And"",""Text"":""create buffer \u0027test-no-metadata\u0027 with metadata size \u00270\u0027 and payload size \u002710240\u0027"",""Process"":""reader"",""ProcessedText"":""create buffer \u0027test-no-metadata\u0027 with metadata size \u00270\u0027 and payload size \u002710240\u0027"",""Parameters"":{}},{""Type"":""When"",""Text"":""the writer is \u0027python\u0027"",""Process"":""writer"",""ProcessedText"":"""",""Parameters"":{}},{""Type"":""And"",""Text"":""connect to buffer \u0027test-no-metadata\u0027"",""Process"":""writer"",""ProcessedText"":""connect to buffer \u0027test-no-metadata\u0027"",""Parameters"":{}},{""Type"":""And"",""Text"":""write frames without metadata"",""Process"":""writer"",""ProcessedText"":""write frames without metadata"",""Parameters"":{}},{""Type"":""Then"",""Text"":""the reader is \u0027csharp\u0027"",""Process"":""reader"",""ProcessedText"":"""",""Parameters"":{}},{""Type"":""And"",""Text"":""read frames successfully"",""Process"":""reader"",""ProcessedText"":""read frames successfully"",""Parameters"":{}},{""Type"":""And"",""Text"":""system should work without metadata"",""Process"":""reader"",""ProcessedText"":""system should work without metadata"",""Parameters"":{}}]}";

        var scenario = DeserializeScenario(scenarioJson);
        await ExecuteScenarioAsync(scenario);
    }

    [Fact(DisplayName = "Test 10.5 - Writer Death During Read [reader=csharp, writer=csharp]")]
    [Trait("Scenario", "Test 10.5 - Writer Death During Read")]
    [Trait("Platform", "csharp/csharp")]
    [Trait("Uses", "csharp")]
    [Trait("Feature", "Initialization")]    public async Task Test_10_5_Writer_Death_During_Read_reader_csharp_writer_csharp()
    {
        const string scenarioJson = @"{""TestId"":""csharp-csharp-test-10-5---writer-death-during-read"",""ScenarioName"":""Test 10.5 - Writer Death During Read"",""ScenarioDescription"":null,""Tags"":[],""Platforms"":{""reader"":""csharp"",""writer"":""csharp""},""Background"":[{""Type"":""Given"",""Text"":""the test mode is configured"",""Process"":null,""ProcessedText"":""the test mode is configured"",""Parameters"":{}}],""Steps"":[{""Type"":""Given"",""Text"":""the reader is \u0027csharp\u0027"",""Process"":""reader"",""ProcessedText"":"""",""Parameters"":{}},{""Type"":""And"",""Text"":""create buffer \u0027test-writer-death-read\u0027 with default config"",""Process"":""reader"",""ProcessedText"":""create buffer \u0027test-writer-death-read\u0027 with default config"",""Parameters"":{}},{""Type"":""When"",""Text"":""the writer is \u0027python\u0027"",""Process"":""writer"",""ProcessedText"":"""",""Parameters"":{}},{""Type"":""And"",""Text"":""connect to buffer \u0027test-writer-death-read\u0027"",""Process"":""writer"",""ProcessedText"":""connect to buffer \u0027test-writer-death-read\u0027"",""Parameters"":{}},{""Type"":""Then"",""Text"":""the reader is \u0027csharp\u0027"",""Process"":""reader"",""ProcessedText"":"""",""Parameters"":{}},{""Type"":""And"",""Text"":""wait on semaphore for data"",""Process"":""reader"",""ProcessedText"":""wait on semaphore for data"",""Parameters"":{}},{""Type"":""When"",""Text"":""the writer is \u0027python\u0027"",""Process"":""writer"",""ProcessedText"":"""",""Parameters"":{}},{""Type"":""And"",""Text"":""simulate crash while reader blocked"",""Process"":""writer"",""ProcessedText"":""simulate crash while reader blocked"",""Parameters"":{}},{""Type"":""Then"",""Text"":""the reader is \u0027csharp\u0027"",""Process"":""reader"",""ProcessedText"":"""",""Parameters"":{}},{""Type"":""And"",""Text"":""detect writer death after timeout \u00275\u0027 seconds"",""Process"":""reader"",""ProcessedText"":""detect writer death after timeout \u00275\u0027 seconds"",""Parameters"":{}},{""Type"":""And"",""Text"":""throw writer dead exception"",""Process"":""reader"",""ProcessedText"":""throw writer dead exception"",""Parameters"":{}}]}";

        var scenario = DeserializeScenario(scenarioJson);
        await ExecuteScenarioAsync(scenario);
    }

}