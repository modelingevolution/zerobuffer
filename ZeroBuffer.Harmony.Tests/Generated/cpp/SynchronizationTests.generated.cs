// <auto-generated />
using System;
using System.Text.Json;
using System.Threading.Tasks;
using Xunit;
using Xunit.Abstractions;
using ModelingEvolution.Harmony.Core;
using ModelingEvolution.Harmony.Execution;
using ModelingEvolution.Harmony.ProcessManagement;
using Microsoft.Extensions.Logging.Abstractions;
using ZeroBuffer.Harmony.Tests;

namespace ZeroBuffer.Harmony.Tests.Cpp;

public class SynchronizationTests : HarmonyTestBase
{
    public SynchronizationTests(ITestOutputHelper output) : base(output) { }

    [Fact(DisplayName = "Test 12.1 - Rapid Create Destroy Cycles [reader=cpp]")]
    [Trait("Scenario", "Test 12.1 - Rapid Create Destroy Cycles")]
    [Trait("Platform", "cpp")]
    [Trait("Uses", "cpp")]
    [Trait("Feature", "Synchronization")]    public async Task Test_12_1_Rapid_Create_Destroy_Cycles_reader_cpp()
    {
        const string scenarioJson = @"{""TestId"":""cpp-test-12-1---rapid-create-destroy-cycles"",""ScenarioName"":""Test 12.1 - Rapid Create Destroy Cycles"",""ScenarioDescription"":null,""Tags"":[],""Platforms"":{""reader"":""cpp""},""Background"":[{""Type"":""Given"",""Text"":""the test mode is configured"",""Process"":null,""ProcessedText"":""the test mode is configured"",""Parameters"":{}}],""Steps"":[{""Type"":""Given"",""Text"":""perform \u00271000\u0027 iterations of:"",""Process"":null,""ProcessedText"":""perform \u00271000\u0027 iterations of:"",""Parameters"":{}},{""Type"":""When"",""Text"":""the reader is \u0027csharp\u0027"",""Process"":""reader"",""ProcessedText"":"""",""Parameters"":{}},{""Type"":""And"",""Text"":""create buffer \u0027test-rapid-cycle\u0027 with default config"",""Process"":""reader"",""ProcessedText"":""create buffer \u0027test-rapid-cycle\u0027 with default config"",""Parameters"":{}},{""Type"":""And"",""Text"":""destroy buffer"",""Process"":""reader"",""ProcessedText"":""destroy buffer"",""Parameters"":{}},{""Type"":""Then"",""Text"":""no resource leaks should occur"",""Process"":null,""ProcessedText"":""no resource leaks should occur"",""Parameters"":{}},{""Type"":""And"",""Text"":""lock files should be properly cleaned"",""Process"":""reader"",""ProcessedText"":""lock files should be properly cleaned"",""Parameters"":{}},{""Type"":""And"",""Text"":""system should remain stable"",""Process"":""reader"",""ProcessedText"":""system should remain stable"",""Parameters"":{}}]}";

        var scenario = DeserializeScenario(scenarioJson);
        await ExecuteScenarioAsync(scenario);
    }

}