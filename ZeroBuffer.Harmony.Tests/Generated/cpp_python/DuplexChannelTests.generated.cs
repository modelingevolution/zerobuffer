// <auto-generated />
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text.Json;
using System.Threading.Tasks;
using Xunit;
using Xunit.Abstractions;
using ModelingEvolution.Harmony.Core;
using ModelingEvolution.Harmony.Execution;
using ModelingEvolution.Harmony.ProcessManagement;
using Microsoft.Extensions.Logging.Abstractions;
using ZeroBuffer.Harmony.Tests;

namespace ZeroBuffer.Harmony.Tests.Cpp_Python;

public class DuplexChannelTests : HarmonyTestBase
{
    public DuplexChannelTests(ITestOutputHelper output) : base(output) { }

    #region Static Test Data
    private static readonly string Test_14_1_Basic_Request_Response_client_cpp_server_python_Json = @"{""TestId"":""cpp-python-test-14-1---basic-request-response"",""FeatureId"":4,""ScenarioName"":""Test 14.1 - Basic Request-Response"",""ScenarioDescription"":null,""Tags"":[],""Platforms"":{""client"":""cpp"",""server"":""python""},""Background"":[{""Type"":""Given"",""Text"":""the test mode is configured"",""Process"":null,""ProcessedText"":""the test mode is configured"",""Parameters"":{}}],""Steps"":[{""Type"":""Given"",""Text"":""the \u0027server\u0027 process creates duplex channel \u0027duplex-basic\u0027 with metadata size \u00274096\u0027 and payload size \u00271048576\u0027"",""Process"":""server"",""ProcessedText"":""creates duplex channel \u0027duplex-basic\u0027 with metadata size \u00274096\u0027 and payload size \u00271048576\u0027"",""Parameters"":{}},{""Type"":""Given"",""Text"":""the \u0027server\u0027 process starts echo handler"",""Process"":""server"",""ProcessedText"":""starts echo handler"",""Parameters"":{}},{""Type"":""When"",""Text"":""the \u0027client\u0027 process creates duplex channel client \u0027duplex-basic\u0027"",""Process"":""client"",""ProcessedText"":""creates duplex channel client \u0027duplex-basic\u0027"",""Parameters"":{}},{""Type"":""When"",""Text"":""the \u0027client\u0027 process sends request with size \u00271\u0027"",""Process"":""client"",""ProcessedText"":""sends request with size \u00271\u0027"",""Parameters"":{}},{""Type"":""Then"",""Text"":""response should match request with size \u00271\u0027"",""Process"":null,""ProcessedText"":""response should match request with size \u00271\u0027"",""Parameters"":{}},{""Type"":""When"",""Text"":""the \u0027client\u0027 process sends request with size \u00271024\u0027"",""Process"":""client"",""ProcessedText"":""sends request with size \u00271024\u0027"",""Parameters"":{}},{""Type"":""Then"",""Text"":""response should match request with size \u00271024\u0027"",""Process"":null,""ProcessedText"":""response should match request with size \u00271024\u0027"",""Parameters"":{}},{""Type"":""When"",""Text"":""the \u0027client\u0027 process sends request with size \u0027102400\u0027"",""Process"":""client"",""ProcessedText"":""sends request with size \u0027102400\u0027"",""Parameters"":{}},{""Type"":""Then"",""Text"":""response should match request with size \u0027102400\u0027"",""Process"":null,""ProcessedText"":""response should match request with size \u0027102400\u0027"",""Parameters"":{}},{""Type"":""Then"",""Text"":""all responses should have correct sequence numbers"",""Process"":""client"",""ProcessedText"":""all responses should have correct sequence numbers"",""Parameters"":{}}]}";
    private static readonly string Test_14_2_Sequence_Number_Correlation_client_cpp_server_python_Json = @"{""TestId"":""cpp-python-test-14-2---sequence-number-correlation"",""FeatureId"":4,""ScenarioName"":""Test 14.2 - Sequence Number Correlation"",""ScenarioDescription"":null,""Tags"":[],""Platforms"":{""client"":""cpp"",""server"":""python""},""Background"":[{""Type"":""Given"",""Text"":""the test mode is configured"",""Process"":null,""ProcessedText"":""the test mode is configured"",""Parameters"":{}}],""Steps"":[{""Type"":""Given"",""Text"":""the \u0027server\u0027 process creates duplex channel \u0027duplex-sequence\u0027 with default config"",""Process"":""server"",""ProcessedText"":""creates duplex channel \u0027duplex-sequence\u0027 with default config"",""Parameters"":{}},{""Type"":""Given"",""Text"":""the \u0027server\u0027 process starts delayed echo handler with \u0027500\u0027 ms delay"",""Process"":""server"",""ProcessedText"":""starts delayed echo handler with \u0027500\u0027 ms delay"",""Parameters"":{}},{""Type"":""When"",""Text"":""the \u0027client\u0027 process creates duplex channel client \u0027duplex-sequence\u0027"",""Process"":""client"",""ProcessedText"":""creates duplex channel client \u0027duplex-sequence\u0027"",""Parameters"":{}},{""Type"":""When"",""Text"":""the \u0027client\u0027 process sends \u002710\u0027 requests rapidly without waiting"",""Process"":""client"",""ProcessedText"":""sends \u002710\u0027 requests rapidly without waiting"",""Parameters"":{}},{""Type"":""Then"",""Text"":""the \u0027server\u0027 process responds in reverse order"",""Process"":""server"",""ProcessedText"":""responds in reverse order"",""Parameters"":{}},{""Type"":""When"",""Text"":""the \u0027client\u0027 process receives all \u002710\u0027 responses"",""Process"":""client"",""ProcessedText"":""receives all \u002710\u0027 responses"",""Parameters"":{}},{""Type"":""Then"",""Text"":""responses should match requests by sequence number"",""Process"":null,""ProcessedText"":""responses should match requests by sequence number"",""Parameters"":{}},{""Type"":""Then"",""Text"":""no responses should be lost or mismatched"",""Process"":""client"",""ProcessedText"":""no responses should be lost or mismatched"",""Parameters"":{}}]}";
    private static readonly string Test_14_3_Concurrent_Client_Operations_client_cpp_server_python_Json = @"{""TestId"":""cpp-python-test-14-3---concurrent-client-operations"",""FeatureId"":4,""ScenarioName"":""Test 14.3 - Concurrent Client Operations"",""ScenarioDescription"":null,""Tags"":[],""Platforms"":{""client"":""cpp"",""server"":""python""},""Background"":[{""Type"":""Given"",""Text"":""the test mode is configured"",""Process"":null,""ProcessedText"":""the test mode is configured"",""Parameters"":{}}],""Steps"":[{""Type"":""Given"",""Text"":""the \u0027server\u0027 process creates duplex channel \u0027duplex-concurrent\u0027 with default config"",""Process"":""server"",""ProcessedText"":""creates duplex channel \u0027duplex-concurrent\u0027 with default config"",""Parameters"":{}},{""Type"":""Given"",""Text"":""the \u0027server\u0027 process starts variable delay handler \u00270-100\u0027 ms"",""Process"":""server"",""ProcessedText"":""starts variable delay handler \u00270-100\u0027 ms"",""Parameters"":{}},{""Type"":""When"",""Text"":""the \u0027client\u0027 process creates duplex channel client \u0027duplex-concurrent\u0027"",""Process"":""client"",""ProcessedText"":""creates duplex channel client \u0027duplex-concurrent\u0027"",""Parameters"":{}},{""Type"":""When"",""Text"":""the \u0027client\u0027 process spawns \u00275\u0027 threads"",""Process"":""client"",""ProcessedText"":""spawns \u00275\u0027 threads"",""Parameters"":{}},{""Type"":""When"",""Text"":""each thread sends \u002720\u0027 requests"",""Process"":""client"",""ProcessedText"":""each thread sends \u002720\u0027 requests"",""Parameters"":{}},{""Type"":""Then"",""Text"":""each thread receives exactly \u002720\u0027 responses"",""Process"":null,""ProcessedText"":""each thread receives exactly \u002720\u0027 responses"",""Parameters"":{}},{""Type"":""Then"",""Text"":""no cross-thread response delivery occurs"",""Process"":""client"",""ProcessedText"":""no cross-thread response delivery occurs"",""Parameters"":{}},{""Type"":""Then"",""Text"":""all \u0027100\u0027 total responses are accounted for"",""Process"":""client"",""ProcessedText"":""all \u0027100\u0027 total responses are accounted for"",""Parameters"":{}}]}";
    private static readonly string Test_14_4_Server_Processing_Mode_SingleThread_client_cpp_server_python_Json = @"{""TestId"":""cpp-python-test-14-4---server-processing-mode-singlethread"",""FeatureId"":4,""ScenarioName"":""Test 14.4 - Server Processing Mode SingleThread"",""ScenarioDescription"":null,""Tags"":[],""Platforms"":{""client"":""cpp"",""server"":""python""},""Background"":[{""Type"":""Given"",""Text"":""the test mode is configured"",""Process"":null,""ProcessedText"":""the test mode is configured"",""Parameters"":{}}],""Steps"":[{""Type"":""Given"",""Text"":""the \u0027server\u0027 process creates duplex channel \u0027duplex-singlethread\u0027 with processing mode \u0027SingleThread\u0027"",""Process"":""server"",""ProcessedText"":""creates duplex channel \u0027duplex-singlethread\u0027 with processing mode \u0027SingleThread\u0027"",""Parameters"":{}},{""Type"":""Given"",""Text"":""the \u0027server\u0027 process starts handler with \u00271\u0027 second processing time"",""Process"":""server"",""ProcessedText"":""starts handler with \u00271\u0027 second processing time"",""Parameters"":{}},{""Type"":""When"",""Text"":""the \u0027client\u0027 process creates duplex channel client \u0027duplex-singlethread\u0027"",""Process"":""client"",""ProcessedText"":""creates duplex channel client \u0027duplex-singlethread\u0027"",""Parameters"":{}},{""Type"":""When"",""Text"":""the \u0027client\u0027 process sends \u00273\u0027 requests simultaneously"",""Process"":""client"",""ProcessedText"":""sends \u00273\u0027 requests simultaneously"",""Parameters"":{}},{""Type"":""When"",""Text"":""the \u0027client\u0027 process measures total response time"",""Process"":""client"",""ProcessedText"":""measures total response time"",""Parameters"":{}},{""Type"":""Then"",""Text"":""total time should be at least \u00273\u0027 seconds"",""Process"":null,""ProcessedText"":""total time should be at least \u00273\u0027 seconds"",""Parameters"":{}},{""Type"":""Then"",""Text"":""responses should arrive in order"",""Process"":""client"",""ProcessedText"":""responses should arrive in order"",""Parameters"":{}}]}";
    private static readonly string Test_14_5_Server_Death_During_Processing_client_cpp_server_python_Json = @"{""TestId"":""cpp-python-test-14-5---server-death-during-processing"",""FeatureId"":4,""ScenarioName"":""Test 14.5 - Server Death During Processing"",""ScenarioDescription"":null,""Tags"":[],""Platforms"":{""client"":""cpp"",""server"":""python""},""Background"":[{""Type"":""Given"",""Text"":""the test mode is configured"",""Process"":null,""ProcessedText"":""the test mode is configured"",""Parameters"":{}}],""Steps"":[{""Type"":""Given"",""Text"":""the \u0027server\u0027 process creates duplex channel \u0027duplex-crash\u0027 with default config"",""Process"":""server"",""ProcessedText"":""creates duplex channel \u0027duplex-crash\u0027 with default config"",""Parameters"":{}},{""Type"":""Given"",""Text"":""the \u0027server\u0027 process starts handler that crashes after \u0027100\u0027 ms"",""Process"":""server"",""ProcessedText"":""starts handler that crashes after \u0027100\u0027 ms"",""Parameters"":{}},{""Type"":""When"",""Text"":""the \u0027client\u0027 process creates duplex channel client \u0027duplex-crash\u0027"",""Process"":""client"",""ProcessedText"":""creates duplex channel client \u0027duplex-crash\u0027"",""Parameters"":{}},{""Type"":""When"",""Text"":""the \u0027client\u0027 process sends large request of \u00271048576\u0027 bytes"",""Process"":""client"",""ProcessedText"":""sends large request of \u00271048576\u0027 bytes"",""Parameters"":{}},{""Type"":""Then"",""Text"":""the \u0027server\u0027 process simulates crash during processing"",""Process"":""server"",""ProcessedText"":""simulates crash during processing"",""Parameters"":{}},{""Type"":""When"",""Text"":""the \u0027client\u0027 process waits for response with timeout \u00275\u0027 seconds"",""Process"":""client"",""ProcessedText"":""waits for response with timeout \u00275\u0027 seconds"",""Parameters"":{}},{""Type"":""Then"",""Text"":""the \u0027client\u0027 process should detect server death"",""Process"":""client"",""ProcessedText"":""should detect server death"",""Parameters"":{}},{""Type"":""Then"",""Text"":""an appropriate exception should be thrown"",""Process"":""client"",""ProcessedText"":""an appropriate exception should be thrown"",""Parameters"":{}}]}";
    private static readonly string Test_14_6_Buffer_Full_on_Response_Channel_client_cpp_server_python_Json = @"{""TestId"":""cpp-python-test-14-6---buffer-full-on-response-channel"",""FeatureId"":4,""ScenarioName"":""Test 14.6 - Buffer Full on Response Channel"",""ScenarioDescription"":null,""Tags"":[],""Platforms"":{""client"":""cpp"",""server"":""python""},""Background"":[{""Type"":""Given"",""Text"":""the test mode is configured"",""Process"":null,""ProcessedText"":""the test mode is configured"",""Parameters"":{}}],""Steps"":[{""Type"":""Given"",""Text"":""the \u0027server\u0027 process creates duplex channel \u0027duplex-full\u0027 with metadata size \u00271024\u0027 and payload size \u002710240\u0027"",""Process"":""server"",""ProcessedText"":""creates duplex channel \u0027duplex-full\u0027 with metadata size \u00271024\u0027 and payload size \u002710240\u0027"",""Parameters"":{}},{""Type"":""Given"",""Text"":""the \u0027server\u0027 process starts handler that doubles request size"",""Process"":""server"",""ProcessedText"":""starts handler that doubles request size"",""Parameters"":{}},{""Type"":""When"",""Text"":""the \u0027client\u0027 process creates duplex channel client \u0027duplex-full\u0027"",""Process"":""client"",""ProcessedText"":""creates duplex channel client \u0027duplex-full\u0027"",""Parameters"":{}},{""Type"":""When"",""Text"":""the \u0027client\u0027 process sends request with size \u00274096\u0027"",""Process"":""client"",""ProcessedText"":""sends request with size \u00274096\u0027"",""Parameters"":{}},{""Type"":""When"",""Text"":""the \u0027client\u0027 process does not read responses"",""Process"":""client"",""ProcessedText"":""does not read responses"",""Parameters"":{}},{""Type"":""Then"",""Text"":""the \u0027server\u0027 process attempts to send response of \u00278192\u0027 bytes"",""Process"":""server"",""ProcessedText"":""attempts to send response of \u00278192\u0027 bytes"",""Parameters"":{}},{""Type"":""Then"",""Text"":""the \u0027server\u0027 process should block on response write"",""Process"":""server"",""ProcessedText"":""should block on response write"",""Parameters"":{}},{""Type"":""When"",""Text"":""the \u0027client\u0027 process reads one response"",""Process"":""client"",""ProcessedText"":""reads one response"",""Parameters"":{}},{""Type"":""Then"",""Text"":""the \u0027server\u0027 process should unblock and complete write"",""Process"":""server"",""ProcessedText"":""should unblock and complete write"",""Parameters"":{}}]}";
    private static readonly string Test_14_7_Zero_Copy_Client_Operations_client_cpp_server_python_Json = @"{""TestId"":""cpp-python-test-14-7---zero-copy-client-operations"",""FeatureId"":4,""ScenarioName"":""Test 14.7 - Zero-Copy Client Operations"",""ScenarioDescription"":null,""Tags"":[],""Platforms"":{""client"":""cpp"",""server"":""python""},""Background"":[{""Type"":""Given"",""Text"":""the test mode is configured"",""Process"":null,""ProcessedText"":""the test mode is configured"",""Parameters"":{}}],""Steps"":[{""Type"":""Given"",""Text"":""the \u0027server\u0027 process creates duplex channel \u0027duplex-zerocopy\u0027 with default config"",""Process"":""server"",""ProcessedText"":""creates duplex channel \u0027duplex-zerocopy\u0027 with default config"",""Parameters"":{}},{""Type"":""Given"",""Text"":""the \u0027server\u0027 process starts echo handler"",""Process"":""server"",""ProcessedText"":""starts echo handler"",""Parameters"":{}},{""Type"":""When"",""Text"":""the \u0027client\u0027 process creates duplex channel client \u0027duplex-zerocopy\u0027"",""Process"":""client"",""ProcessedText"":""creates duplex channel client \u0027duplex-zerocopy\u0027"",""Parameters"":{}},{""Type"":""When"",""Text"":""the \u0027client\u0027 process acquires zero-copy request buffer of size \u00274096\u0027"",""Process"":""client"",""ProcessedText"":""acquires zero-copy request buffer of size \u00274096\u0027"",""Parameters"":{}},{""Type"":""When"",""Text"":""the \u0027client\u0027 process fills buffer with test pattern"",""Process"":""client"",""ProcessedText"":""fills buffer with test pattern"",""Parameters"":{}},{""Type"":""When"",""Text"":""the \u0027client\u0027 process commits request"",""Process"":""client"",""ProcessedText"":""commits request"",""Parameters"":{}},{""Type"":""Then"",""Text"":""response should contain same test pattern"",""Process"":null,""ProcessedText"":""response should contain same test pattern"",""Parameters"":{}},{""Type"":""Then"",""Text"":""no memory allocations in send path"",""Process"":""client"",""ProcessedText"":""no memory allocations in send path"",""Parameters"":{}}]}";

    #endregion

    #region Scenarios Collection
    public static IEnumerable<ScenarioExecution> Scenarios => new[]
    {
        DeserializeScenarioStatic(Test_14_1_Basic_Request_Response_client_cpp_server_python_Json),
        DeserializeScenarioStatic(Test_14_2_Sequence_Number_Correlation_client_cpp_server_python_Json),
        DeserializeScenarioStatic(Test_14_3_Concurrent_Client_Operations_client_cpp_server_python_Json),
        DeserializeScenarioStatic(Test_14_4_Server_Processing_Mode_SingleThread_client_cpp_server_python_Json),
        DeserializeScenarioStatic(Test_14_5_Server_Death_During_Processing_client_cpp_server_python_Json),
        DeserializeScenarioStatic(Test_14_6_Buffer_Full_on_Response_Channel_client_cpp_server_python_Json),
        DeserializeScenarioStatic(Test_14_7_Zero_Copy_Client_Operations_client_cpp_server_python_Json)
    };
    #endregion

    #region Test Methods
    [Fact(DisplayName = "Test 14.1 - Basic Request-Response [client=cpp, server=python]")]
    [Trait("Scenario", "Test 14.1 - Basic Request-Response")]
    [Trait("Platform", "cpp/python")]
    [Trait("Uses", "cpp")]
    [Trait("Uses", "python")]
    [Trait("Feature", "DuplexChannel")]    public async Task Test_14_1_Basic_Request_Response_client_cpp_server_python()
    {
        var scenario = DeserializeScenario(Test_14_1_Basic_Request_Response_client_cpp_server_python_Json);
        await ExecuteScenarioAsync(scenario);
    }

    [Fact(DisplayName = "Test 14.2 - Sequence Number Correlation [client=cpp, server=python]")]
    [Trait("Scenario", "Test 14.2 - Sequence Number Correlation")]
    [Trait("Platform", "cpp/python")]
    [Trait("Uses", "cpp")]
    [Trait("Uses", "python")]
    [Trait("Feature", "DuplexChannel")]    public async Task Test_14_2_Sequence_Number_Correlation_client_cpp_server_python()
    {
        var scenario = DeserializeScenario(Test_14_2_Sequence_Number_Correlation_client_cpp_server_python_Json);
        await ExecuteScenarioAsync(scenario);
    }

    [Fact(DisplayName = "Test 14.3 - Concurrent Client Operations [client=cpp, server=python]")]
    [Trait("Scenario", "Test 14.3 - Concurrent Client Operations")]
    [Trait("Platform", "cpp/python")]
    [Trait("Uses", "cpp")]
    [Trait("Uses", "python")]
    [Trait("Feature", "DuplexChannel")]    public async Task Test_14_3_Concurrent_Client_Operations_client_cpp_server_python()
    {
        var scenario = DeserializeScenario(Test_14_3_Concurrent_Client_Operations_client_cpp_server_python_Json);
        await ExecuteScenarioAsync(scenario);
    }

    [Fact(DisplayName = "Test 14.4 - Server Processing Mode SingleThread [client=cpp, server=python]")]
    [Trait("Scenario", "Test 14.4 - Server Processing Mode SingleThread")]
    [Trait("Platform", "cpp/python")]
    [Trait("Uses", "cpp")]
    [Trait("Uses", "python")]
    [Trait("Feature", "DuplexChannel")]    public async Task Test_14_4_Server_Processing_Mode_SingleThread_client_cpp_server_python()
    {
        var scenario = DeserializeScenario(Test_14_4_Server_Processing_Mode_SingleThread_client_cpp_server_python_Json);
        await ExecuteScenarioAsync(scenario);
    }

    [Fact(DisplayName = "Test 14.5 - Server Death During Processing [client=cpp, server=python]")]
    [Trait("Scenario", "Test 14.5 - Server Death During Processing")]
    [Trait("Platform", "cpp/python")]
    [Trait("Uses", "cpp")]
    [Trait("Uses", "python")]
    [Trait("Feature", "DuplexChannel")]    public async Task Test_14_5_Server_Death_During_Processing_client_cpp_server_python()
    {
        var scenario = DeserializeScenario(Test_14_5_Server_Death_During_Processing_client_cpp_server_python_Json);
        await ExecuteScenarioAsync(scenario);
    }

    [Fact(DisplayName = "Test 14.6 - Buffer Full on Response Channel [client=cpp, server=python]")]
    [Trait("Scenario", "Test 14.6 - Buffer Full on Response Channel")]
    [Trait("Platform", "cpp/python")]
    [Trait("Uses", "cpp")]
    [Trait("Uses", "python")]
    [Trait("Feature", "DuplexChannel")]    public async Task Test_14_6_Buffer_Full_on_Response_Channel_client_cpp_server_python()
    {
        var scenario = DeserializeScenario(Test_14_6_Buffer_Full_on_Response_Channel_client_cpp_server_python_Json);
        await ExecuteScenarioAsync(scenario);
    }

    [Fact(DisplayName = "Test 14.7 - Zero-Copy Client Operations [client=cpp, server=python]")]
    [Trait("Scenario", "Test 14.7 - Zero-Copy Client Operations")]
    [Trait("Platform", "cpp/python")]
    [Trait("Uses", "cpp")]
    [Trait("Uses", "python")]
    [Trait("Feature", "DuplexChannel")]    public async Task Test_14_7_Zero_Copy_Client_Operations_client_cpp_server_python()
    {
        var scenario = DeserializeScenario(Test_14_7_Zero_Copy_Client_Operations_client_cpp_server_python_Json);
        await ExecuteScenarioAsync(scenario);
    }


    #endregion
}