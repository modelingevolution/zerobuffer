// <auto-generated />
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text.Json;
using System.Threading.Tasks;
using Xunit;
using Xunit.Abstractions;
using ModelingEvolution.Harmony.Core;
using ModelingEvolution.Harmony.Execution;
using ModelingEvolution.Harmony.ProcessManagement;
using Microsoft.Extensions.Logging.Abstractions;
using ZeroBuffer.Harmony.Tests;

namespace ZeroBuffer.Harmony.Tests.Cpp_Python;

public class PerformanceTests : HarmonyTestBase
{
    public PerformanceTests(ITestOutputHelper output) : base(output) { }

    #region Static Test Data
    private static readonly string Test_3_1_Exact_Buffer_Fit_reader_cpp_writer_python_Json = @"{""TestId"":""cpp-python-test-3-1---exact-buffer-fit"",""FeatureId"":8,""ScenarioName"":""Test 3.1 - Exact Buffer Fit"",""ScenarioDescription"":null,""Tags"":[],""Platforms"":{""reader"":""cpp"",""writer"":""python""},""Background"":[{""Type"":""Given"",""Text"":""the test mode is configured"",""Process"":null,""ProcessedText"":""the test mode is configured"",""Parameters"":{}}],""Steps"":[{""Type"":""Given"",""Text"":""the reader is \u0027csharp\u0027"",""Process"":""reader"",""ProcessedText"":"""",""Parameters"":{}},{""Type"":""Given"",""Text"":""create buffer \u0027test-exact-fit\u0027 with metadata size \u00270\u0027 and payload size \u002710240\u0027"",""Process"":""reader"",""ProcessedText"":""create buffer \u0027test-exact-fit\u0027 with metadata size \u00270\u0027 and payload size \u002710240\u0027"",""Parameters"":{}},{""Type"":""When"",""Text"":""the writer is \u0027python\u0027"",""Process"":""writer"",""ProcessedText"":"""",""Parameters"":{}},{""Type"":""When"",""Text"":""connect to buffer \u0027test-exact-fit\u0027"",""Process"":""writer"",""ProcessedText"":""connect to buffer \u0027test-exact-fit\u0027"",""Parameters"":{}},{""Type"":""When"",""Text"":""write frame with exact size \u002710224\u0027"",""Process"":""writer"",""ProcessedText"":""write frame with exact size \u002710224\u0027"",""Parameters"":{}},{""Type"":""Then"",""Text"":""buffer should be completely full"",""Process"":null,""ProcessedText"":""buffer should be completely full"",""Parameters"":{}},{""Type"":""Then"",""Text"":""no more writes should be possible"",""Process"":""writer"",""ProcessedText"":""no more writes should be possible"",""Parameters"":{}},{""Type"":""When"",""Text"":""the reader is \u0027csharp\u0027"",""Process"":""reader"",""ProcessedText"":"""",""Parameters"":{}},{""Type"":""When"",""Text"":""read frame should have size \u002710224\u0027"",""Process"":""reader"",""ProcessedText"":""read frame should have size \u002710224\u0027"",""Parameters"":{}},{""Type"":""When"",""Text"":""signal space available"",""Process"":""reader"",""ProcessedText"":""signal space available"",""Parameters"":{}},{""Type"":""Then"",""Text"":""the writer is \u0027python\u0027"",""Process"":""writer"",""ProcessedText"":"""",""Parameters"":{}},{""Type"":""Then"",""Text"":""write should succeed again"",""Process"":""writer"",""ProcessedText"":""write should succeed again"",""Parameters"":{}}]}";
    private static readonly string Test_3_2_Minimum_Frame_Size_reader_cpp_writer_python_Json = @"{""TestId"":""cpp-python-test-3-2---minimum-frame-size"",""FeatureId"":8,""ScenarioName"":""Test 3.2 - Minimum Frame Size"",""ScenarioDescription"":null,""Tags"":[],""Platforms"":{""reader"":""cpp"",""writer"":""python""},""Background"":[{""Type"":""Given"",""Text"":""the test mode is configured"",""Process"":null,""ProcessedText"":""the test mode is configured"",""Parameters"":{}}],""Steps"":[{""Type"":""Given"",""Text"":""the reader is \u0027csharp\u0027"",""Process"":""reader"",""ProcessedText"":"""",""Parameters"":{}},{""Type"":""Given"",""Text"":""create buffer \u0027test-min-frame\u0027 with metadata size \u00270\u0027 and payload size \u002710240\u0027"",""Process"":""reader"",""ProcessedText"":""create buffer \u0027test-min-frame\u0027 with metadata size \u00270\u0027 and payload size \u002710240\u0027"",""Parameters"":{}},{""Type"":""When"",""Text"":""the writer is \u0027python\u0027"",""Process"":""writer"",""ProcessedText"":"""",""Parameters"":{}},{""Type"":""When"",""Text"":""connect to buffer \u0027test-min-frame\u0027"",""Process"":""writer"",""ProcessedText"":""connect to buffer \u0027test-min-frame\u0027"",""Parameters"":{}},{""Type"":""When"",""Text"":""attempt to write frame with size \u00270\u0027"",""Process"":""writer"",""ProcessedText"":""attempt to write frame with size \u00270\u0027"",""Parameters"":{}},{""Type"":""Then"",""Text"":""write should fail with zero size error"",""Process"":null,""ProcessedText"":""write should fail with zero size error"",""Parameters"":{}},{""Type"":""When"",""Text"":""write frame with size \u00271\u0027"",""Process"":null,""ProcessedText"":""write frame with size \u00271\u0027"",""Parameters"":{}},{""Type"":""Then"",""Text"":""the reader is \u0027csharp\u0027"",""Process"":""reader"",""ProcessedText"":"""",""Parameters"":{}},{""Type"":""Then"",""Text"":""read frame should have size \u00271\u0027"",""Process"":""reader"",""ProcessedText"":""read frame should have size \u00271\u0027"",""Parameters"":{}},{""Type"":""Then"",""Text"":""frame overhead should be \u002716\u0027 bytes"",""Process"":""reader"",""ProcessedText"":""frame overhead should be \u002716\u0027 bytes"",""Parameters"":{}}]}";
    private static readonly string Test_3_3_Wrap_Around_Behavior_reader_cpp_writer_python_Json = @"{""TestId"":""cpp-python-test-3-3---wrap-around-behavior"",""FeatureId"":8,""ScenarioName"":""Test 3.3 - Wrap-Around Behavior"",""ScenarioDescription"":null,""Tags"":[],""Platforms"":{""reader"":""cpp"",""writer"":""python""},""Background"":[{""Type"":""Given"",""Text"":""the test mode is configured"",""Process"":null,""ProcessedText"":""the test mode is configured"",""Parameters"":{}}],""Steps"":[{""Type"":""Given"",""Text"":""the reader is \u0027csharp\u0027"",""Process"":""reader"",""ProcessedText"":"""",""Parameters"":{}},{""Type"":""Given"",""Text"":""create buffer \u0027test-wrap\u0027 with metadata size \u00270\u0027 and payload size \u002710240\u0027"",""Process"":""reader"",""ProcessedText"":""create buffer \u0027test-wrap\u0027 with metadata size \u00270\u0027 and payload size \u002710240\u0027"",""Parameters"":{}},{""Type"":""When"",""Text"":""the writer is \u0027python\u0027"",""Process"":""writer"",""ProcessedText"":"""",""Parameters"":{}},{""Type"":""When"",""Text"":""connect to buffer \u0027test-wrap\u0027"",""Process"":""writer"",""ProcessedText"":""connect to buffer \u0027test-wrap\u0027"",""Parameters"":{}},{""Type"":""When"",""Text"":""write frame with size \u00276144\u0027"",""Process"":""writer"",""ProcessedText"":""write frame with size \u00276144\u0027"",""Parameters"":{}},{""Type"":""Then"",""Text"":""the reader is \u0027csharp\u0027"",""Process"":""reader"",""ProcessedText"":"""",""Parameters"":{}},{""Type"":""Then"",""Text"":""read frame should have size \u00276144\u0027"",""Process"":""reader"",""ProcessedText"":""read frame should have size \u00276144\u0027"",""Parameters"":{}},{""Type"":""Then"",""Text"":""signal space available"",""Process"":""reader"",""ProcessedText"":""signal space available"",""Parameters"":{}},{""Type"":""When"",""Text"":""the writer is \u0027python\u0027"",""Process"":""writer"",""ProcessedText"":"""",""Parameters"":{}},{""Type"":""When"",""Text"":""write frame with size \u00277168\u0027"",""Process"":""writer"",""ProcessedText"":""write frame with size \u00277168\u0027"",""Parameters"":{}},{""Type"":""Then"",""Text"":""write should wait for space"",""Process"":null,""ProcessedText"":""write should wait for space"",""Parameters"":{}},{""Type"":""When"",""Text"":""the reader is \u0027csharp\u0027"",""Process"":""reader"",""ProcessedText"":"""",""Parameters"":{}},{""Type"":""When"",""Text"":""signal space available"",""Process"":""reader"",""ProcessedText"":""signal space available"",""Parameters"":{}},{""Type"":""Then"",""Text"":""the writer is \u0027python\u0027"",""Process"":""writer"",""ProcessedText"":"""",""Parameters"":{}},{""Type"":""Then"",""Text"":""write should complete at buffer start"",""Process"":""writer"",""ProcessedText"":""write should complete at buffer start"",""Parameters"":{}}]}";
    private static readonly string Test_3_4_Rapid_Write_Read_Cycles_reader_cpp_writer_python_Json = @"{""TestId"":""cpp-python-test-3-4---rapid-write-read-cycles"",""FeatureId"":8,""ScenarioName"":""Test 3.4 - Rapid Write-Read Cycles"",""ScenarioDescription"":null,""Tags"":[],""Platforms"":{""reader"":""cpp"",""writer"":""python""},""Background"":[{""Type"":""Given"",""Text"":""the test mode is configured"",""Process"":null,""ProcessedText"":""the test mode is configured"",""Parameters"":{}}],""Steps"":[{""Type"":""Given"",""Text"":""the reader is \u0027csharp\u0027"",""Process"":""reader"",""ProcessedText"":"""",""Parameters"":{}},{""Type"":""Given"",""Text"":""create buffer \u0027test-rapid\u0027 with metadata size \u00270\u0027 and payload size \u002710240\u0027"",""Process"":""reader"",""ProcessedText"":""create buffer \u0027test-rapid\u0027 with metadata size \u00270\u0027 and payload size \u002710240\u0027"",""Parameters"":{}},{""Type"":""When"",""Text"":""the writer is \u0027python\u0027"",""Process"":""writer"",""ProcessedText"":"""",""Parameters"":{}},{""Type"":""When"",""Text"":""connect to buffer \u0027test-rapid\u0027"",""Process"":""writer"",""ProcessedText"":""connect to buffer \u0027test-rapid\u0027"",""Parameters"":{}},{""Type"":""When"",""Text"":""write \u002710000\u0027 frames of size \u00271024\u0027 rapidly"",""Process"":""writer"",""ProcessedText"":""write \u002710000\u0027 frames of size \u00271024\u0027 rapidly"",""Parameters"":{}},{""Type"":""When"",""Text"":""the reader is \u0027csharp\u0027"",""Process"":""reader"",""ProcessedText"":"""",""Parameters"":{}},{""Type"":""When"",""Text"":""read all frames and signal immediately"",""Process"":""reader"",""ProcessedText"":""read all frames and signal immediately"",""Parameters"":{}},{""Type"":""Then"",""Text"":""all sequence numbers should be correct"",""Process"":null,""ProcessedText"":""all sequence numbers should be correct"",""Parameters"":{}},{""Type"":""Then"",""Text"":""no frames should be lost"",""Process"":""reader"",""ProcessedText"":""no frames should be lost"",""Parameters"":{}},{""Type"":""Then"",""Text"":""no deadlocks should occur"",""Process"":""reader"",""ProcessedText"":""no deadlocks should occur"",""Parameters"":{}}]}";
    private static readonly string Test_3_5_Buffer_Full_With_Multiple_Writers_Rejected_reader_cpp_writer_python_Json = @"{""TestId"":""cpp-python-test-3-5---buffer-full-with-multiple-writers-rejected"",""FeatureId"":8,""ScenarioName"":""Test 3.5 - Buffer Full With Multiple Writers Rejected"",""ScenarioDescription"":null,""Tags"":[],""Platforms"":{""reader"":""cpp"",""writer"":""python""},""Background"":[{""Type"":""Given"",""Text"":""the test mode is configured"",""Process"":null,""ProcessedText"":""the test mode is configured"",""Parameters"":{}}],""Steps"":[{""Type"":""Given"",""Text"":""the reader is \u0027csharp\u0027"",""Process"":""reader"",""ProcessedText"":"""",""Parameters"":{}},{""Type"":""Given"",""Text"":""create buffer \u0027test-multi-writer-full\u0027 with metadata size \u00270\u0027 and payload size \u002710240\u0027"",""Process"":""reader"",""ProcessedText"":""create buffer \u0027test-multi-writer-full\u0027 with metadata size \u00270\u0027 and payload size \u002710240\u0027"",""Parameters"":{}},{""Type"":""When"",""Text"":""the writer is \u0027python\u0027"",""Process"":""writer"",""ProcessedText"":"""",""Parameters"":{}},{""Type"":""When"",""Text"":""connect to buffer \u0027test-multi-writer-full\u0027"",""Process"":""writer"",""ProcessedText"":""connect to buffer \u0027test-multi-writer-full\u0027"",""Parameters"":{}},{""Type"":""When"",""Text"":""fill buffer to \u002780%\u0027 capacity"",""Process"":""writer"",""ProcessedText"":""fill buffer to \u002780%\u0027 capacity"",""Parameters"":{}},{""Type"":""Then"",""Text"":""the writer is \u0027cpp\u0027"",""Process"":""writer"",""ProcessedText"":"""",""Parameters"":{}},{""Type"":""Then"",""Text"":""attempt to connect to buffer \u0027test-multi-writer-full\u0027"",""Process"":""writer"",""ProcessedText"":""attempt to connect to buffer \u0027test-multi-writer-full\u0027"",""Parameters"":{}},{""Type"":""Then"",""Text"":""connection should fail with writer exists error"",""Process"":""writer"",""ProcessedText"":""connection should fail with writer exists error"",""Parameters"":{}},{""Type"":""When"",""Text"":""the writer is \u0027python\u0027"",""Process"":""writer"",""ProcessedText"":"""",""Parameters"":{}},{""Type"":""When"",""Text"":""continue filling buffer to \u0027100%\u0027"",""Process"":""writer"",""ProcessedText"":""continue filling buffer to \u0027100%\u0027"",""Parameters"":{}},{""Type"":""Then"",""Text"":""next write should block waiting for space"",""Process"":null,""ProcessedText"":""next write should block waiting for space"",""Parameters"":{}}]}";

    #endregion

    #region Scenarios Collection
    public static IEnumerable<ScenarioExecution> Scenarios => new[]
    {
        DeserializeScenarioStatic(Test_3_1_Exact_Buffer_Fit_reader_cpp_writer_python_Json),
        DeserializeScenarioStatic(Test_3_2_Minimum_Frame_Size_reader_cpp_writer_python_Json),
        DeserializeScenarioStatic(Test_3_3_Wrap_Around_Behavior_reader_cpp_writer_python_Json),
        DeserializeScenarioStatic(Test_3_4_Rapid_Write_Read_Cycles_reader_cpp_writer_python_Json),
        DeserializeScenarioStatic(Test_3_5_Buffer_Full_With_Multiple_Writers_Rejected_reader_cpp_writer_python_Json)
    };
    #endregion

    #region Test Methods
    [Fact(DisplayName = "Test 3.1 - Exact Buffer Fit [reader=cpp, writer=python]")]
    [Trait("Scenario", "Test 3.1 - Exact Buffer Fit")]
    [Trait("Platform", "cpp/python")]
    [Trait("Uses", "cpp")]
    [Trait("Uses", "python")]
    [Trait("Feature", "Performance")]    public async Task Test_3_1_Exact_Buffer_Fit_reader_cpp_writer_python()
    {
        var scenario = DeserializeScenario(Test_3_1_Exact_Buffer_Fit_reader_cpp_writer_python_Json);
        await ExecuteScenarioAsync(scenario);
    }

    [Fact(DisplayName = "Test 3.2 - Minimum Frame Size [reader=cpp, writer=python]")]
    [Trait("Scenario", "Test 3.2 - Minimum Frame Size")]
    [Trait("Platform", "cpp/python")]
    [Trait("Uses", "cpp")]
    [Trait("Uses", "python")]
    [Trait("Feature", "Performance")]    public async Task Test_3_2_Minimum_Frame_Size_reader_cpp_writer_python()
    {
        var scenario = DeserializeScenario(Test_3_2_Minimum_Frame_Size_reader_cpp_writer_python_Json);
        await ExecuteScenarioAsync(scenario);
    }

    [Fact(DisplayName = "Test 3.3 - Wrap-Around Behavior [reader=cpp, writer=python]")]
    [Trait("Scenario", "Test 3.3 - Wrap-Around Behavior")]
    [Trait("Platform", "cpp/python")]
    [Trait("Uses", "cpp")]
    [Trait("Uses", "python")]
    [Trait("Feature", "Performance")]    public async Task Test_3_3_Wrap_Around_Behavior_reader_cpp_writer_python()
    {
        var scenario = DeserializeScenario(Test_3_3_Wrap_Around_Behavior_reader_cpp_writer_python_Json);
        await ExecuteScenarioAsync(scenario);
    }

    [Fact(DisplayName = "Test 3.4 - Rapid Write-Read Cycles [reader=cpp, writer=python]")]
    [Trait("Scenario", "Test 3.4 - Rapid Write-Read Cycles")]
    [Trait("Platform", "cpp/python")]
    [Trait("Uses", "cpp")]
    [Trait("Uses", "python")]
    [Trait("Feature", "Performance")]    public async Task Test_3_4_Rapid_Write_Read_Cycles_reader_cpp_writer_python()
    {
        var scenario = DeserializeScenario(Test_3_4_Rapid_Write_Read_Cycles_reader_cpp_writer_python_Json);
        await ExecuteScenarioAsync(scenario);
    }

    [Fact(DisplayName = "Test 3.5 - Buffer Full With Multiple Writers Rejected [reader=cpp, writer=python]")]
    [Trait("Scenario", "Test 3.5 - Buffer Full With Multiple Writers Rejected")]
    [Trait("Platform", "cpp/python")]
    [Trait("Uses", "cpp")]
    [Trait("Uses", "python")]
    [Trait("Feature", "Performance")]    public async Task Test_3_5_Buffer_Full_With_Multiple_Writers_Rejected_reader_cpp_writer_python()
    {
        var scenario = DeserializeScenario(Test_3_5_Buffer_Full_With_Multiple_Writers_Rejected_reader_cpp_writer_python_Json);
        await ExecuteScenarioAsync(scenario);
    }


    #endregion
}