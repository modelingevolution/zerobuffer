// <auto-generated />
using System;
using System.Text.Json;
using System.Threading.Tasks;
using Xunit;
using Xunit.Abstractions;
using ModelingEvolution.Harmony.Core;
using ModelingEvolution.Harmony.Execution;
using ModelingEvolution.Harmony.ProcessManagement;
using Microsoft.Extensions.Logging.Abstractions;
using ZeroBuffer.Harmony.Tests;

namespace ZeroBuffer.Harmony.Tests.Python;

public class BenchmarksTests : HarmonyTestBase
{
    public BenchmarksTests(ITestOutputHelper output) : base(output) { }

    [Fact(DisplayName = "Test 15.6 - Buffer Utilization Under Load [reader=python]")]
    [Trait("Scenario", "Test 15.6 - Buffer Utilization Under Load")]
    [Trait("Platform", "python")]
    [Trait("Uses", "python")]
    [Trait("Feature", "Benchmarks")]    public async Task Test_15_6_Buffer_Utilization_Under_Load_reader_python()
    {
        const string scenarioJson = @"{""TestId"":""python-test-15-6---buffer-utilization-under-load"",""ScenarioName"":""Test 15.6 - Buffer Utilization Under Load"",""ScenarioDescription"":null,""Tags"":[],""Platforms"":{""reader"":""python""},""Background"":[{""Type"":""Given"",""Text"":""the test mode is configured"",""Process"":null,""ProcessedText"":""the test mode is configured"",""Parameters"":{}},{""Type"":""And"",""Text"":""benchmark environment is prepared"",""Process"":null,""ProcessedText"":""benchmark environment is prepared"",""Parameters"":{}}],""Steps"":[{""Type"":""Given"",""Text"":""the reader is \u0027csharp\u0027"",""Process"":""reader"",""ProcessedText"":"""",""Parameters"":{}},{""Type"":""And"",""Text"":""create buffer \u0027bench-utilization\u0027 with default config"",""Process"":""reader"",""ProcessedText"":""create buffer \u0027bench-utilization\u0027 with default config"",""Parameters"":{}},{""Type"":""And"",""Text"":""writer is faster than reader"",""Process"":""reader"",""ProcessedText"":""writer is faster than reader"",""Parameters"":{}},{""Type"":""When"",""Text"":""monitor buffer utilization over time"",""Process"":null,""ProcessedText"":""monitor buffer utilization over time"",""Parameters"":{}},{""Type"":""Then"",""Text"":""verify degradation detection at \u002780%\u0027"",""Process"":null,""ProcessedText"":""verify degradation detection at \u002780%\u0027"",""Parameters"":{}},{""Type"":""And"",""Text"":""report time to degradation"",""Process"":""reader"",""ProcessedText"":""report time to degradation"",""Parameters"":{}},{""Type"":""And"",""Text"":""report recovery time"",""Process"":""reader"",""ProcessedText"":""report recovery time"",""Parameters"":{}}]}";

        var scenario = DeserializeScenario(scenarioJson);
        await ExecuteScenarioAsync(scenario);
    }

}