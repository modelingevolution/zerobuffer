// <auto-generated />
using System;
using System.Text.Json;
using System.Threading.Tasks;
using Xunit;
using Xunit.Abstractions;
using ModelingEvolution.Harmony.Core;
using ModelingEvolution.Harmony.Execution;
using ModelingEvolution.Harmony.ProcessManagement;
using Microsoft.Extensions.Logging.Abstractions;
using ZeroBuffer.Harmony.Tests;

namespace ZeroBuffer.Harmony.Tests.Csharp;

public class ErrorHandlingTests : HarmonyTestBase
{
    public ErrorHandlingTests(ITestOutputHelper output) : base(output) { }

    [Fact(DisplayName = "Test 8.1 - Stale Resource Cleanup [reader=csharp]")]
    [Trait("Scenario", "Test 8.1 - Stale Resource Cleanup")]
    [Trait("Platform", "csharp")]
    [Trait("Uses", "csharp")]
    [Trait("Feature", "ErrorHandling")]    public async Task Test_8_1_Stale_Resource_Cleanup_reader_csharp()
    {
        const string scenarioJson = @"{""TestId"":""csharp-test-8-1---stale-resource-cleanup"",""ScenarioName"":""Test 8.1 - Stale Resource Cleanup"",""ScenarioDescription"":null,""Tags"":[],""Platforms"":{""reader"":""csharp""},""Background"":[{""Type"":""Given"",""Text"":""the test mode is configured"",""Process"":null,""ProcessedText"":""the test mode is configured"",""Parameters"":{}}],""Steps"":[{""Type"":""Given"",""Text"":""manually create stale lock file for \u0027stale-test\u0027"",""Process"":null,""ProcessedText"":""manually create stale lock file for \u0027stale-test\u0027"",""Parameters"":{}},{""Type"":""And"",""Text"":""create orphaned shared memory for \u0027stale-test\u0027"",""Process"":null,""ProcessedText"":""create orphaned shared memory for \u0027stale-test\u0027"",""Parameters"":{}},{""Type"":""And"",""Text"":""create orphaned semaphores for \u0027stale-test\u0027"",""Process"":null,""ProcessedText"":""create orphaned semaphores for \u0027stale-test\u0027"",""Parameters"":{}},{""Type"":""When"",""Text"":""the reader is \u0027csharp\u0027"",""Process"":""reader"",""ProcessedText"":"""",""Parameters"":{}},{""Type"":""And"",""Text"":""attempt to create buffer \u0027stale-test\u0027"",""Process"":""reader"",""ProcessedText"":""attempt to create buffer \u0027stale-test\u0027"",""Parameters"":{}},{""Type"":""Then"",""Text"":""stale resources should be detected"",""Process"":null,""ProcessedText"":""stale resources should be detected"",""Parameters"":{}},{""Type"":""And"",""Text"":""old resources should be cleaned up"",""Process"":""reader"",""ProcessedText"":""old resources should be cleaned up"",""Parameters"":{}},{""Type"":""And"",""Text"":""new buffer should be created successfully"",""Process"":""reader"",""ProcessedText"":""new buffer should be created successfully"",""Parameters"":{}}]}";

        var scenario = DeserializeScenario(scenarioJson);
        await ExecuteScenarioAsync(scenario);
    }

}