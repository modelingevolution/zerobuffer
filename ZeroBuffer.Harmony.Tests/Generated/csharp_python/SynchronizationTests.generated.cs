// <auto-generated />
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text.Json;
using System.Threading.Tasks;
using Xunit;
using Xunit.Abstractions;
using ModelingEvolution.Harmony.Core;
using ModelingEvolution.Harmony.Execution;
using ModelingEvolution.Harmony.ProcessManagement;
using Microsoft.Extensions.Logging.Abstractions;
using ZeroBuffer.Harmony.Tests;

namespace ZeroBuffer.Harmony.Tests.Csharp_Python;

public class SynchronizationTests : HarmonyTestBase
{
    public SynchronizationTests(ITestOutputHelper output) : base(output) { }

    #region Static Test Data
    private static readonly string Test_6_2_Burst_Write_Performance_reader_csharp_writer_python_Json = @"{""TestId"":""csharp-python-test-6-2---burst-write-performance"",""FeatureId"":12,""ScenarioName"":""Test 6.2 - Burst Write Performance"",""ScenarioDescription"":null,""Tags"":[],""Platforms"":{""reader"":""csharp"",""writer"":""python""},""Background"":[{""Type"":""Given"",""Text"":""the test mode is configured"",""Process"":null,""ProcessedText"":""the test mode is configured"",""Parameters"":{}}],""Steps"":[{""Type"":""Given"",""Text"":""the reader is \u0027csharp\u0027"",""Process"":""reader"",""ProcessedText"":"""",""Parameters"":{}},{""Type"":""Given"",""Text"":""create buffer \u0027test-burst\u0027 with metadata size \u00270\u0027 and payload size \u0027102400\u0027"",""Process"":""reader"",""ProcessedText"":""create buffer \u0027test-burst\u0027 with metadata size \u00270\u0027 and payload size \u0027102400\u0027"",""Parameters"":{}},{""Type"":""When"",""Text"":""the writer is \u0027python\u0027"",""Process"":""writer"",""ProcessedText"":"""",""Parameters"":{}},{""Type"":""When"",""Text"":""connect to buffer \u0027test-burst\u0027"",""Process"":""writer"",""ProcessedText"":""connect to buffer \u0027test-burst\u0027"",""Parameters"":{}},{""Type"":""When"",""Text"":""write \u002750\u0027 frames of size \u00271024\u0027 as fast as possible"",""Process"":""writer"",""ProcessedText"":""write \u002750\u0027 frames of size \u00271024\u0027 as fast as possible"",""Parameters"":{}},{""Type"":""Then"",""Text"":""the reader is \u0027csharp\u0027"",""Process"":""reader"",""ProcessedText"":"""",""Parameters"":{}},{""Type"":""Then"",""Text"":""wait \u00271\u0027 second before reading"",""Process"":""reader"",""ProcessedText"":""wait \u00271\u0027 second before reading"",""Parameters"":{}},{""Type"":""Then"",""Text"":""read all \u002750\u0027 frames"",""Process"":""reader"",""ProcessedText"":""read all \u002750\u0027 frames"",""Parameters"":{}},{""Type"":""Then"",""Text"":""all frames should be received correctly"",""Process"":null,""ProcessedText"":""all frames should be received correctly"",""Parameters"":{}},{""Type"":""Then"",""Text"":""data integrity should be maintained"",""Process"":""reader"",""ProcessedText"":""data integrity should be maintained"",""Parameters"":{}}]}";
    private static readonly string Test_6_3_Slow_Reader_Flow_Control_reader_csharp_writer_python_Json = @"{""TestId"":""csharp-python-test-6-3---slow-reader-flow-control"",""FeatureId"":12,""ScenarioName"":""Test 6.3 - Slow Reader Flow Control"",""ScenarioDescription"":null,""Tags"":[],""Platforms"":{""reader"":""csharp"",""writer"":""python""},""Background"":[{""Type"":""Given"",""Text"":""the test mode is configured"",""Process"":null,""ProcessedText"":""the test mode is configured"",""Parameters"":{}}],""Steps"":[{""Type"":""Given"",""Text"":""the reader is \u0027csharp\u0027"",""Process"":""reader"",""ProcessedText"":"""",""Parameters"":{}},{""Type"":""Given"",""Text"":""create buffer \u0027test-slow-reader\u0027 with metadata size \u00270\u0027 and payload size \u002751200\u0027"",""Process"":""reader"",""ProcessedText"":""create buffer \u0027test-slow-reader\u0027 with metadata size \u00270\u0027 and payload size \u002751200\u0027"",""Parameters"":{}},{""Type"":""When"",""Text"":""the writer is \u0027python\u0027"",""Process"":""writer"",""ProcessedText"":"""",""Parameters"":{}},{""Type"":""When"",""Text"":""connect to buffer \u0027test-slow-reader\u0027"",""Process"":""writer"",""ProcessedText"":""connect to buffer \u0027test-slow-reader\u0027"",""Parameters"":{}},{""Type"":""When"",""Text"":""write frames continuously"",""Process"":""writer"",""ProcessedText"":""write frames continuously"",""Parameters"":{}},{""Type"":""When"",""Text"":""the reader is \u0027csharp\u0027"",""Process"":""reader"",""ProcessedText"":"""",""Parameters"":{}},{""Type"":""When"",""Text"":""read one frame every \u0027100\u0027 ms"",""Process"":""reader"",""ProcessedText"":""read one frame every \u0027100\u0027 ms"",""Parameters"":{}},{""Type"":""Then"",""Text"":""writer should block when buffer full"",""Process"":null,""ProcessedText"":""writer should block when buffer full"",""Parameters"":{}},{""Type"":""Then"",""Text"":""no frames should be lost"",""Process"":""reader"",""ProcessedText"":""no frames should be lost"",""Parameters"":{}},{""Type"":""Then"",""Text"":""flow control should work correctly"",""Process"":""reader"",""ProcessedText"":""flow control should work correctly"",""Parameters"":{}}]}";
    private static readonly string Test_6_4_Semaphore_Signal_Ordering_reader_csharp_writer_python_Json = @"{""TestId"":""csharp-python-test-6-4---semaphore-signal-ordering"",""FeatureId"":12,""ScenarioName"":""Test 6.4 - Semaphore Signal Ordering"",""ScenarioDescription"":null,""Tags"":[],""Platforms"":{""reader"":""csharp"",""writer"":""python""},""Background"":[{""Type"":""Given"",""Text"":""the test mode is configured"",""Process"":null,""ProcessedText"":""the test mode is configured"",""Parameters"":{}}],""Steps"":[{""Type"":""Given"",""Text"":""the reader is \u0027csharp\u0027"",""Process"":""reader"",""ProcessedText"":"""",""Parameters"":{}},{""Type"":""Given"",""Text"":""create buffer \u0027test-semaphore\u0027 with default config"",""Process"":""reader"",""ProcessedText"":""create buffer \u0027test-semaphore\u0027 with default config"",""Parameters"":{}},{""Type"":""When"",""Text"":""the writer is \u0027python\u0027"",""Process"":""writer"",""ProcessedText"":"""",""Parameters"":{}},{""Type"":""When"",""Text"":""connect to buffer \u0027test-semaphore\u0027"",""Process"":""writer"",""ProcessedText"":""connect to buffer \u0027test-semaphore\u0027"",""Parameters"":{}},{""Type"":""When"",""Text"":""write frame and signal"",""Process"":""writer"",""ProcessedText"":""write frame and signal"",""Parameters"":{}},{""Type"":""When"",""Text"":""immediately write another frame before reader wakes"",""Process"":""writer"",""ProcessedText"":""immediately write another frame before reader wakes"",""Parameters"":{}},{""Type"":""Then"",""Text"":""the reader is \u0027csharp\u0027"",""Process"":""reader"",""ProcessedText"":"""",""Parameters"":{}},{""Type"":""Then"",""Text"":""process both frames correctly"",""Process"":""reader"",""ProcessedText"":""process both frames correctly"",""Parameters"":{}},{""Type"":""Then"",""Text"":""semaphore count should reflect pending frames"",""Process"":""reader"",""ProcessedText"":""semaphore count should reflect pending frames"",""Parameters"":{}}]}";
    private static readonly string Test_7_3_Memory_Barrier_Verification_reader_csharp_writer_python_Json = @"{""TestId"":""csharp-python-test-7-3---memory-barrier-verification"",""FeatureId"":12,""ScenarioName"":""Test 7.3 - Memory Barrier Verification"",""ScenarioDescription"":null,""Tags"":[],""Platforms"":{""reader"":""csharp"",""writer"":""python""},""Background"":[{""Type"":""Given"",""Text"":""the test mode is configured"",""Process"":null,""ProcessedText"":""the test mode is configured"",""Parameters"":{}}],""Steps"":[{""Type"":""Given"",""Text"":""the reader is \u0027csharp\u0027"",""Process"":""reader"",""ProcessedText"":"""",""Parameters"":{}},{""Type"":""Given"",""Text"":""create buffer \u0027test-memory-barrier\u0027 with default config"",""Process"":""reader"",""ProcessedText"":""create buffer \u0027test-memory-barrier\u0027 with default config"",""Parameters"":{}},{""Type"":""When"",""Text"":""the writer is \u0027cpp\u0027"",""Process"":""writer"",""ProcessedText"":"""",""Parameters"":{}},{""Type"":""When"",""Text"":""connect to buffer \u0027test-memory-barrier\u0027"",""Process"":""writer"",""ProcessedText"":""connect to buffer \u0027test-memory-barrier\u0027"",""Parameters"":{}},{""Type"":""When"",""Text"":""write complex structure with multiple fields"",""Process"":""writer"",""ProcessedText"":""write complex structure with multiple fields"",""Parameters"":{}},{""Type"":""When"",""Text"":""ensure memory barriers are in place"",""Process"":""writer"",""ProcessedText"":""ensure memory barriers are in place"",""Parameters"":{}},{""Type"":""Then"",""Text"":""the reader is \u0027csharp\u0027"",""Process"":""reader"",""ProcessedText"":"""",""Parameters"":{}},{""Type"":""Then"",""Text"":""read structure after semaphore signal"",""Process"":""reader"",""ProcessedText"":""read structure after semaphore signal"",""Parameters"":{}},{""Type"":""Then"",""Text"":""all fields should be fully visible"",""Process"":""reader"",""ProcessedText"":""all fields should be fully visible"",""Parameters"":{}},{""Type"":""Then"",""Text"":""no partially visible writes should occur"",""Process"":""reader"",""ProcessedText"":""no partially visible writes should occur"",""Parameters"":{}}]}";
    private static readonly string Test_7_4_Pattern_Validation_reader_csharp_writer_python_Json = @"{""TestId"":""csharp-python-test-7-4---pattern-validation"",""FeatureId"":12,""ScenarioName"":""Test 7.4 - Pattern Validation"",""ScenarioDescription"":null,""Tags"":[],""Platforms"":{""reader"":""csharp"",""writer"":""python""},""Background"":[{""Type"":""Given"",""Text"":""the test mode is configured"",""Process"":null,""ProcessedText"":""the test mode is configured"",""Parameters"":{}}],""Steps"":[{""Type"":""Given"",""Text"":""the reader is \u0027csharp\u0027"",""Process"":""reader"",""ProcessedText"":"""",""Parameters"":{}},{""Type"":""Given"",""Text"":""create buffer \u0027test-pattern\u0027 with default config"",""Process"":""reader"",""ProcessedText"":""create buffer \u0027test-pattern\u0027 with default config"",""Parameters"":{}},{""Type"":""When"",""Text"":""the writer is \u0027python\u0027"",""Process"":""writer"",""ProcessedText"":"""",""Parameters"":{}},{""Type"":""When"",""Text"":""connect to buffer \u0027test-pattern\u0027"",""Process"":""writer"",""ProcessedText"":""connect to buffer \u0027test-pattern\u0027"",""Parameters"":{}},{""Type"":""When"",""Text"":""write frame with size \u00271\u0027 using incrementing pattern"",""Process"":""writer"",""ProcessedText"":""write frame with size \u00271\u0027 using incrementing pattern"",""Parameters"":{}},{""Type"":""When"",""Text"":""write frame with size \u00271024\u0027 using incrementing pattern"",""Process"":""writer"",""ProcessedText"":""write frame with size \u00271024\u0027 using incrementing pattern"",""Parameters"":{}},{""Type"":""When"",""Text"":""write frame with size \u00271048576\u0027 using incrementing pattern"",""Process"":""writer"",""ProcessedText"":""write frame with size \u00271048576\u0027 using incrementing pattern"",""Parameters"":{}},{""Type"":""When"",""Text"":""write frame with size \u002710485760\u0027 using incrementing pattern"",""Process"":""writer"",""ProcessedText"":""write frame with size \u002710485760\u0027 using incrementing pattern"",""Parameters"":{}},{""Type"":""Then"",""Text"":""the reader is \u0027csharp\u0027"",""Process"":""reader"",""ProcessedText"":"""",""Parameters"":{}},{""Type"":""Then"",""Text"":""validate each byte matches expected pattern"",""Process"":""reader"",""ProcessedText"":""validate each byte matches expected pattern"",""Parameters"":{}},{""Type"":""Then"",""Text"":""no data corruption should be detected"",""Process"":""reader"",""ProcessedText"":""no data corruption should be detected"",""Parameters"":{}}]}";
    private static readonly string Test_11_1_Alternating_Frame_Sizes_reader_csharp_writer_python_Json = @"{""TestId"":""csharp-python-test-11-1---alternating-frame-sizes"",""FeatureId"":12,""ScenarioName"":""Test 11.1 - Alternating Frame Sizes"",""ScenarioDescription"":null,""Tags"":[],""Platforms"":{""reader"":""csharp"",""writer"":""python""},""Background"":[{""Type"":""Given"",""Text"":""the test mode is configured"",""Process"":null,""ProcessedText"":""the test mode is configured"",""Parameters"":{}}],""Steps"":[{""Type"":""Given"",""Text"":""the reader is \u0027csharp\u0027"",""Process"":""reader"",""ProcessedText"":"""",""Parameters"":{}},{""Type"":""Given"",""Text"":""create buffer \u0027test-alternating\u0027 with metadata size \u00270\u0027 and payload size \u002710240\u0027"",""Process"":""reader"",""ProcessedText"":""create buffer \u0027test-alternating\u0027 with metadata size \u00270\u0027 and payload size \u002710240\u0027"",""Parameters"":{}},{""Type"":""When"",""Text"":""the writer is \u0027python\u0027"",""Process"":""writer"",""ProcessedText"":"""",""Parameters"":{}},{""Type"":""When"",""Text"":""connect to buffer \u0027test-alternating\u0027"",""Process"":""writer"",""ProcessedText"":""connect to buffer \u0027test-alternating\u0027"",""Parameters"":{}},{""Type"":""When"",""Text"":""write large frame using \u002790%\u0027 of buffer"",""Process"":""writer"",""ProcessedText"":""write large frame using \u002790%\u0027 of buffer"",""Parameters"":{}},{""Type"":""When"",""Text"":""write small frame of \u00271\u0027 byte"",""Process"":""writer"",""ProcessedText"":""write small frame of \u00271\u0027 byte"",""Parameters"":{}},{""Type"":""When"",""Text"":""attempt to write large frame again"",""Process"":""writer"",""ProcessedText"":""attempt to write large frame again"",""Parameters"":{}},{""Type"":""Then"",""Text"":""proper wrap-around handling should occur"",""Process"":null,""ProcessedText"":""proper wrap-around handling should occur"",""Parameters"":{}},{""Type"":""Then"",""Text"":""no deadlocks should happen"",""Process"":""writer"",""ProcessedText"":""no deadlocks should happen"",""Parameters"":{}}]}";
    private static readonly string Test_11_2_Semaphore_Signal_Coalescing_reader_csharp_writer_python_Json = @"{""TestId"":""csharp-python-test-11-2---semaphore-signal-coalescing"",""FeatureId"":12,""ScenarioName"":""Test 11.2 - Semaphore Signal Coalescing"",""ScenarioDescription"":null,""Tags"":[],""Platforms"":{""reader"":""csharp"",""writer"":""python""},""Background"":[{""Type"":""Given"",""Text"":""the test mode is configured"",""Process"":null,""ProcessedText"":""the test mode is configured"",""Parameters"":{}}],""Steps"":[{""Type"":""Given"",""Text"":""the reader is \u0027csharp\u0027"",""Process"":""reader"",""ProcessedText"":"""",""Parameters"":{}},{""Type"":""Given"",""Text"":""create buffer \u0027test-coalesce\u0027 with default config"",""Process"":""reader"",""ProcessedText"":""create buffer \u0027test-coalesce\u0027 with default config"",""Parameters"":{}},{""Type"":""When"",""Text"":""the writer is \u0027python\u0027"",""Process"":""writer"",""ProcessedText"":"""",""Parameters"":{}},{""Type"":""When"",""Text"":""connect to buffer \u0027test-coalesce\u0027"",""Process"":""writer"",""ProcessedText"":""connect to buffer \u0027test-coalesce\u0027"",""Parameters"":{}},{""Type"":""When"",""Text"":""write \u002710\u0027 frames rapidly without reader consuming"",""Process"":""writer"",""ProcessedText"":""write \u002710\u0027 frames rapidly without reader consuming"",""Parameters"":{}},{""Type"":""Then"",""Text"":""semaphore count should represent pending frames"",""Process"":null,""ProcessedText"":""semaphore count should represent pending frames"",""Parameters"":{}},{""Type"":""When"",""Text"":""the reader is \u0027csharp\u0027"",""Process"":""reader"",""ProcessedText"":"""",""Parameters"":{}},{""Type"":""When"",""Text"":""wake and process all frames"",""Process"":""reader"",""ProcessedText"":""wake and process all frames"",""Parameters"":{}},{""Type"":""Then"",""Text"":""all frames should be read correctly"",""Process"":null,""ProcessedText"":""all frames should be read correctly"",""Parameters"":{}},{""Type"":""Then"",""Text"":""coalesced signals should be handled properly"",""Process"":""reader"",""ProcessedText"":""coalesced signals should be handled properly"",""Parameters"":{}}]}";

    #endregion

    #region Scenarios Collection
    public static IEnumerable<ScenarioExecution> Scenarios => new[]
    {
        DeserializeScenarioStatic(Test_6_2_Burst_Write_Performance_reader_csharp_writer_python_Json),
        DeserializeScenarioStatic(Test_6_3_Slow_Reader_Flow_Control_reader_csharp_writer_python_Json),
        DeserializeScenarioStatic(Test_6_4_Semaphore_Signal_Ordering_reader_csharp_writer_python_Json),
        DeserializeScenarioStatic(Test_7_3_Memory_Barrier_Verification_reader_csharp_writer_python_Json),
        DeserializeScenarioStatic(Test_7_4_Pattern_Validation_reader_csharp_writer_python_Json),
        DeserializeScenarioStatic(Test_11_1_Alternating_Frame_Sizes_reader_csharp_writer_python_Json),
        DeserializeScenarioStatic(Test_11_2_Semaphore_Signal_Coalescing_reader_csharp_writer_python_Json)
    };
    #endregion

    #region Test Methods
    [Fact(DisplayName = "Test 6.2 - Burst Write Performance [reader=csharp, writer=python]")]
    [Trait("Scenario", "Test 6.2 - Burst Write Performance")]
    [Trait("Platform", "csharp/python")]
    [Trait("Uses", "csharp")]
    [Trait("Uses", "python")]
    [Trait("Feature", "Synchronization")]    public async Task Test_6_2_Burst_Write_Performance_reader_csharp_writer_python()
    {
        var scenario = DeserializeScenario(Test_6_2_Burst_Write_Performance_reader_csharp_writer_python_Json);
        await ExecuteScenarioAsync(scenario);
    }

    [Fact(DisplayName = "Test 6.3 - Slow Reader Flow Control [reader=csharp, writer=python]")]
    [Trait("Scenario", "Test 6.3 - Slow Reader Flow Control")]
    [Trait("Platform", "csharp/python")]
    [Trait("Uses", "csharp")]
    [Trait("Uses", "python")]
    [Trait("Feature", "Synchronization")]    public async Task Test_6_3_Slow_Reader_Flow_Control_reader_csharp_writer_python()
    {
        var scenario = DeserializeScenario(Test_6_3_Slow_Reader_Flow_Control_reader_csharp_writer_python_Json);
        await ExecuteScenarioAsync(scenario);
    }

    [Fact(DisplayName = "Test 6.4 - Semaphore Signal Ordering [reader=csharp, writer=python]")]
    [Trait("Scenario", "Test 6.4 - Semaphore Signal Ordering")]
    [Trait("Platform", "csharp/python")]
    [Trait("Uses", "csharp")]
    [Trait("Uses", "python")]
    [Trait("Feature", "Synchronization")]    public async Task Test_6_4_Semaphore_Signal_Ordering_reader_csharp_writer_python()
    {
        var scenario = DeserializeScenario(Test_6_4_Semaphore_Signal_Ordering_reader_csharp_writer_python_Json);
        await ExecuteScenarioAsync(scenario);
    }

    [Fact(DisplayName = "Test 7.3 - Memory Barrier Verification [reader=csharp, writer=python]")]
    [Trait("Scenario", "Test 7.3 - Memory Barrier Verification")]
    [Trait("Platform", "csharp/python")]
    [Trait("Uses", "csharp")]
    [Trait("Uses", "python")]
    [Trait("Feature", "Synchronization")]    public async Task Test_7_3_Memory_Barrier_Verification_reader_csharp_writer_python()
    {
        var scenario = DeserializeScenario(Test_7_3_Memory_Barrier_Verification_reader_csharp_writer_python_Json);
        await ExecuteScenarioAsync(scenario);
    }

    [Fact(DisplayName = "Test 7.4 - Pattern Validation [reader=csharp, writer=python]")]
    [Trait("Scenario", "Test 7.4 - Pattern Validation")]
    [Trait("Platform", "csharp/python")]
    [Trait("Uses", "csharp")]
    [Trait("Uses", "python")]
    [Trait("Feature", "Synchronization")]    public async Task Test_7_4_Pattern_Validation_reader_csharp_writer_python()
    {
        var scenario = DeserializeScenario(Test_7_4_Pattern_Validation_reader_csharp_writer_python_Json);
        await ExecuteScenarioAsync(scenario);
    }

    [Fact(DisplayName = "Test 11.1 - Alternating Frame Sizes [reader=csharp, writer=python]")]
    [Trait("Scenario", "Test 11.1 - Alternating Frame Sizes")]
    [Trait("Platform", "csharp/python")]
    [Trait("Uses", "csharp")]
    [Trait("Uses", "python")]
    [Trait("Feature", "Synchronization")]    public async Task Test_11_1_Alternating_Frame_Sizes_reader_csharp_writer_python()
    {
        var scenario = DeserializeScenario(Test_11_1_Alternating_Frame_Sizes_reader_csharp_writer_python_Json);
        await ExecuteScenarioAsync(scenario);
    }

    [Fact(DisplayName = "Test 11.2 - Semaphore Signal Coalescing [reader=csharp, writer=python]")]
    [Trait("Scenario", "Test 11.2 - Semaphore Signal Coalescing")]
    [Trait("Platform", "csharp/python")]
    [Trait("Uses", "csharp")]
    [Trait("Uses", "python")]
    [Trait("Feature", "Synchronization")]    public async Task Test_11_2_Semaphore_Signal_Coalescing_reader_csharp_writer_python()
    {
        var scenario = DeserializeScenario(Test_11_2_Semaphore_Signal_Coalescing_reader_csharp_writer_python_Json);
        await ExecuteScenarioAsync(scenario);
    }


    #endregion
}