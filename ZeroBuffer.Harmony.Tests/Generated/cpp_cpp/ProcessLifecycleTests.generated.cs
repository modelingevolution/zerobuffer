// <auto-generated />
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text.Json;
using System.Threading.Tasks;
using Xunit;
using Xunit.Abstractions;
using ModelingEvolution.Harmony.Core;
using ModelingEvolution.Harmony.Execution;
using ModelingEvolution.Harmony.ProcessManagement;
using Microsoft.Extensions.Logging.Abstractions;
using ZeroBuffer.Harmony.Tests;

namespace ZeroBuffer.Harmony.Tests.Cpp_Cpp;

public class ProcessLifecycleTests : HarmonyTestBase
{
    public ProcessLifecycleTests(ITestOutputHelper output) : base(output) { }

    #region Static Test Data
    private static readonly string Test_2_1_Writer_Crash_Detection_reader_cpp_writer_cpp_Json = @"{""TestId"":""cpp-cpp-test-2-1---writer-crash-detection"",""FeatureId"":2,""ScenarioName"":""Test 2.1 - Writer Crash Detection"",""ScenarioDescription"":null,""Tags"":[],""Platforms"":{""reader"":""cpp"",""writer"":""cpp""},""Background"":[],""Steps"":[{""Type"":""Given"",""Text"":""the \u0027reader\u0027 process creates buffer \u0027test-writer-crash\u0027 with metadata size \u00271024\u0027 and payload size \u002710240\u0027"",""Process"":""reader"",""ProcessedText"":""creates buffer \u0027test-writer-crash\u0027 with metadata size \u00271024\u0027 and payload size \u002710240\u0027"",""Parameters"":{}},{""Type"":""Given"",""Text"":""the \u0027writer\u0027 process connects to buffer \u0027test-writer-crash\u0027"",""Process"":""writer"",""ProcessedText"":""connects to buffer \u0027test-writer-crash\u0027"",""Parameters"":{}},{""Type"":""Given"",""Text"":""the \u0027writer\u0027 process writes frame with data \u0027alive\u0027"",""Process"":""writer"",""ProcessedText"":""writes frame with data \u0027alive\u0027"",""Parameters"":{}},{""Type"":""Then"",""Text"":""the \u0027reader\u0027 process should read frame with data \u0027alive\u0027"",""Process"":""reader"",""ProcessedText"":""should read frame with data \u0027alive\u0027"",""Parameters"":{}},{""Type"":""Then"",""Text"":""the writer should be connected"",""Process"":""reader"",""ProcessedText"":""the writer should be connected"",""Parameters"":{}},{""Type"":""When"",""Text"":""the \u0027writer\u0027 process crashes"",""Process"":""writer"",""ProcessedText"":""crashes"",""Parameters"":{}},{""Type"":""Then"",""Text"":""wait for \u00272\u0027 seconds"",""Process"":null,""ProcessedText"":""wait for \u00272\u0027 seconds"",""Parameters"":{}},{""Type"":""Then"",""Text"":""the writer should be disconnected"",""Process"":""writer"",""ProcessedText"":""the writer should be disconnected"",""Parameters"":{}},{""Type"":""Then"",""Text"":""the \u0027reader\u0027 process should timeout or detect writer death on next read"",""Process"":""reader"",""ProcessedText"":""should timeout or detect writer death on next read"",""Parameters"":{}}]}";
    private static readonly string Test_2_2_Reader_Crash_Detection_reader_cpp_writer_cpp_Json = @"{""TestId"":""cpp-cpp-test-2-2---reader-crash-detection"",""FeatureId"":2,""ScenarioName"":""Test 2.2 - Reader Crash Detection"",""ScenarioDescription"":null,""Tags"":[],""Platforms"":{""reader"":""cpp"",""writer"":""cpp""},""Background"":[],""Steps"":[{""Type"":""Given"",""Text"":""the \u0027reader\u0027 process creates buffer \u0027test-reader-crash\u0027 with metadata size \u00271024\u0027 and payload size \u002710240\u0027"",""Process"":""reader"",""ProcessedText"":""creates buffer \u0027test-reader-crash\u0027 with metadata size \u00271024\u0027 and payload size \u002710240\u0027"",""Parameters"":{}},{""Type"":""Given"",""Text"":""the \u0027writer\u0027 process connects to buffer \u0027test-reader-crash\u0027"",""Process"":""writer"",""ProcessedText"":""connects to buffer \u0027test-reader-crash\u0027"",""Parameters"":{}},{""Type"":""Given"",""Text"":""the \u0027writer\u0027 process writes frame with sequence \u00271\u0027"",""Process"":""writer"",""ProcessedText"":""writes frame with sequence \u00271\u0027"",""Parameters"":{}},{""Type"":""Then"",""Text"":""the \u0027reader\u0027 process should read frame with sequence \u00271\u0027"",""Process"":""reader"",""ProcessedText"":""should read frame with sequence \u00271\u0027"",""Parameters"":{}},{""Type"":""When"",""Text"":""the \u0027writer\u0027 process fills buffer completely"",""Process"":""writer"",""ProcessedText"":""fills buffer completely"",""Parameters"":{}},{""Type"":""When"",""Text"":""the \u0027reader\u0027 process crashes"",""Process"":""reader"",""ProcessedText"":""crashes"",""Parameters"":{}},{""Type"":""Then"",""Text"":""wait for \u00272\u0027 seconds"",""Process"":null,""ProcessedText"":""wait for \u00272\u0027 seconds"",""Parameters"":{}},{""Type"":""Then"",""Text"":""the \u0027writer\u0027 process should detect reader death on next write"",""Process"":""writer"",""ProcessedText"":""should detect reader death on next write"",""Parameters"":{}}]}";
    private static readonly string Test_2_3_Reader_Replacement_After_Crash_reader_cpp_writer_cpp_Json = @"{""TestId"":""cpp-cpp-test-2-3---reader-replacement-after-crash"",""FeatureId"":2,""ScenarioName"":""Test 2.3 - Reader Replacement After Crash"",""ScenarioDescription"":null,""Tags"":[],""Platforms"":{""reader"":""cpp"",""writer"":""cpp""},""Background"":[],""Steps"":[{""Type"":""Given"",""Text"":""the \u0027reader\u0027 process creates buffer \u0027test-reader-replace\u0027 with metadata size \u00271024\u0027 and payload size \u002710240\u0027"",""Process"":""reader"",""ProcessedText"":""creates buffer \u0027test-reader-replace\u0027 with metadata size \u00271024\u0027 and payload size \u002710240\u0027"",""Parameters"":{}},{""Type"":""Given"",""Text"":""the \u0027writer\u0027 process connects to buffer \u0027test-reader-replace\u0027"",""Process"":""writer"",""ProcessedText"":""connects to buffer \u0027test-reader-replace\u0027"",""Parameters"":{}},{""Type"":""Given"",""Text"":""the \u0027writer\u0027 process writes frame with sequence \u00271\u0027"",""Process"":""writer"",""ProcessedText"":""writes frame with sequence \u00271\u0027"",""Parameters"":{}},{""Type"":""Then"",""Text"":""the \u0027reader\u0027 process should read frame with sequence \u00271\u0027"",""Process"":""reader"",""ProcessedText"":""should read frame with sequence \u00271\u0027"",""Parameters"":{}},{""Type"":""When"",""Text"":""the \u0027reader\u0027 process crashes"",""Process"":""reader"",""ProcessedText"":""crashes"",""Parameters"":{}},{""Type"":""When"",""Text"":""a new \u0027reader\u0027 process connects to existing buffer \u0027test-reader-replace\u0027"",""Process"":""reader"",""ProcessedText"":""a new \u0027reader\u0027 process connects to existing buffer \u0027test-reader-replace\u0027"",""Parameters"":{}},{""Type"":""When"",""Text"":""the \u0027writer\u0027 process writes frame with sequence \u00272\u0027"",""Process"":""writer"",""ProcessedText"":""writes frame with sequence \u00272\u0027"",""Parameters"":{}},{""Type"":""Then"",""Text"":""the \u0027reader\u0027 process should read frame with sequence \u00272\u0027"",""Process"":""reader"",""ProcessedText"":""should read frame with sequence \u00272\u0027"",""Parameters"":{}},{""Type"":""Then"",""Text"":""the buffer should continue functioning normally"",""Process"":""reader"",""ProcessedText"":""the buffer should continue functioning normally"",""Parameters"":{}}]}";
    private static readonly string Test_2_4_Multiple_Writer_Rejection_reader_cpp_writer_cpp_Json = @"{""TestId"":""cpp-cpp-test-2-4---multiple-writer-rejection"",""FeatureId"":2,""ScenarioName"":""Test 2.4 - Multiple Writer Rejection"",""ScenarioDescription"":null,""Tags"":[],""Platforms"":{""reader"":""cpp"",""writer"":""cpp""},""Background"":[],""Steps"":[{""Type"":""Given"",""Text"":""the \u0027reader\u0027 process creates buffer \u0027test-multi-writer\u0027 with metadata size \u00271024\u0027 and payload size \u002710240\u0027"",""Process"":""reader"",""ProcessedText"":""creates buffer \u0027test-multi-writer\u0027 with metadata size \u00271024\u0027 and payload size \u002710240\u0027"",""Parameters"":{}},{""Type"":""Given"",""Text"":""the \u0027writer\u0027 process connects to buffer \u0027test-multi-writer\u0027"",""Process"":""writer"",""ProcessedText"":""connects to buffer \u0027test-multi-writer\u0027"",""Parameters"":{}},{""Type"":""When"",""Text"":""a second \u0027writer\u0027 process attempts to connect to buffer \u0027test-multi-writer\u0027"",""Process"":null,""ProcessedText"":""a second \u0027writer\u0027 process attempts to connect to buffer \u0027test-multi-writer\u0027"",""Parameters"":{}},{""Type"":""Then"",""Text"":""the connection should fail with writer exists error"",""Process"":null,""ProcessedText"":""the connection should fail with writer exists error"",""Parameters"":{}}]}";
    private static readonly string Test_2_5_Clean_Shutdown_Sequence_reader_cpp_writer_cpp_Json = @"{""TestId"":""cpp-cpp-test-2-5---clean-shutdown-sequence"",""FeatureId"":2,""ScenarioName"":""Test 2.5 - Clean Shutdown Sequence"",""ScenarioDescription"":null,""Tags"":[],""Platforms"":{""reader"":""cpp"",""writer"":""cpp""},""Background"":[],""Steps"":[{""Type"":""Given"",""Text"":""the \u0027reader\u0027 process creates buffer \u0027test-shutdown\u0027 with metadata size \u00271024\u0027 and payload size \u002710240\u0027"",""Process"":""reader"",""ProcessedText"":""creates buffer \u0027test-shutdown\u0027 with metadata size \u00271024\u0027 and payload size \u002710240\u0027"",""Parameters"":{}},{""Type"":""Given"",""Text"":""the \u0027writer\u0027 process connects to buffer \u0027test-shutdown\u0027"",""Process"":""writer"",""ProcessedText"":""connects to buffer \u0027test-shutdown\u0027"",""Parameters"":{}},{""Type"":""Given"",""Text"":""the \u0027writer\u0027 process writes frame with data \u0027final message\u0027"",""Process"":""writer"",""ProcessedText"":""writes frame with data \u0027final message\u0027"",""Parameters"":{}},{""Type"":""When"",""Text"":""the \u0027writer\u0027 process closes connection gracefully"",""Process"":""writer"",""ProcessedText"":""closes connection gracefully"",""Parameters"":{}},{""Type"":""Then"",""Text"":""the \u0027reader\u0027 process should read frame with data \u0027final message\u0027"",""Process"":""reader"",""ProcessedText"":""should read frame with data \u0027final message\u0027"",""Parameters"":{}},{""Type"":""Then"",""Text"":""the writer should be disconnected"",""Process"":""reader"",""ProcessedText"":""the writer should be disconnected"",""Parameters"":{}},{""Type"":""Then"",""Text"":""the \u0027reader\u0027 process cleanup should succeed"",""Process"":""reader"",""ProcessedText"":""cleanup should succeed"",""Parameters"":{}}]}";

    #endregion

    #region Scenarios Collection
    public static IEnumerable<ScenarioExecution> Scenarios => new[]
    {
        DeserializeScenarioStatic(Test_2_1_Writer_Crash_Detection_reader_cpp_writer_cpp_Json),
        DeserializeScenarioStatic(Test_2_2_Reader_Crash_Detection_reader_cpp_writer_cpp_Json),
        DeserializeScenarioStatic(Test_2_3_Reader_Replacement_After_Crash_reader_cpp_writer_cpp_Json),
        DeserializeScenarioStatic(Test_2_4_Multiple_Writer_Rejection_reader_cpp_writer_cpp_Json),
        DeserializeScenarioStatic(Test_2_5_Clean_Shutdown_Sequence_reader_cpp_writer_cpp_Json)
    };
    #endregion

    #region Test Methods
    [Fact(DisplayName = "Test 2.1 - Writer Crash Detection [reader=cpp, writer=cpp]")]
    [Trait("Scenario", "Test 2.1 - Writer Crash Detection")]
    [Trait("Platform", "cpp/cpp")]
    [Trait("Uses", "cpp")]
    [Trait("Feature", "02-ProcessLifecycle")]    public async Task Test_2_1_Writer_Crash_Detection_reader_cpp_writer_cpp()
    {
        var scenario = DeserializeScenario(Test_2_1_Writer_Crash_Detection_reader_cpp_writer_cpp_Json);
        await ExecuteScenarioAsync(scenario);
    }

    [Fact(DisplayName = "Test 2.2 - Reader Crash Detection [reader=cpp, writer=cpp]")]
    [Trait("Scenario", "Test 2.2 - Reader Crash Detection")]
    [Trait("Platform", "cpp/cpp")]
    [Trait("Uses", "cpp")]
    [Trait("Feature", "02-ProcessLifecycle")]    public async Task Test_2_2_Reader_Crash_Detection_reader_cpp_writer_cpp()
    {
        var scenario = DeserializeScenario(Test_2_2_Reader_Crash_Detection_reader_cpp_writer_cpp_Json);
        await ExecuteScenarioAsync(scenario);
    }

    [Fact(DisplayName = "Test 2.3 - Reader Replacement After Crash [reader=cpp, writer=cpp]")]
    [Trait("Scenario", "Test 2.3 - Reader Replacement After Crash")]
    [Trait("Platform", "cpp/cpp")]
    [Trait("Uses", "cpp")]
    [Trait("Feature", "02-ProcessLifecycle")]    public async Task Test_2_3_Reader_Replacement_After_Crash_reader_cpp_writer_cpp()
    {
        var scenario = DeserializeScenario(Test_2_3_Reader_Replacement_After_Crash_reader_cpp_writer_cpp_Json);
        await ExecuteScenarioAsync(scenario);
    }

    [Fact(DisplayName = "Test 2.4 - Multiple Writer Rejection [reader=cpp, writer=cpp]")]
    [Trait("Scenario", "Test 2.4 - Multiple Writer Rejection")]
    [Trait("Platform", "cpp/cpp")]
    [Trait("Uses", "cpp")]
    [Trait("Feature", "02-ProcessLifecycle")]    public async Task Test_2_4_Multiple_Writer_Rejection_reader_cpp_writer_cpp()
    {
        var scenario = DeserializeScenario(Test_2_4_Multiple_Writer_Rejection_reader_cpp_writer_cpp_Json);
        await ExecuteScenarioAsync(scenario);
    }

    [Fact(DisplayName = "Test 2.5 - Clean Shutdown Sequence [reader=cpp, writer=cpp]")]
    [Trait("Scenario", "Test 2.5 - Clean Shutdown Sequence")]
    [Trait("Platform", "cpp/cpp")]
    [Trait("Uses", "cpp")]
    [Trait("Feature", "02-ProcessLifecycle")]    public async Task Test_2_5_Clean_Shutdown_Sequence_reader_cpp_writer_cpp()
    {
        var scenario = DeserializeScenario(Test_2_5_Clean_Shutdown_Sequence_reader_cpp_writer_cpp_Json);
        await ExecuteScenarioAsync(scenario);
    }


    #endregion
}