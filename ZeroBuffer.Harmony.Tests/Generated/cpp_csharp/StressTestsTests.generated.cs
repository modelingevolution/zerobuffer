// <auto-generated />
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text.Json;
using System.Threading.Tasks;
using Xunit;
using Xunit.Abstractions;
using ModelingEvolution.Harmony.Core;
using ModelingEvolution.Harmony.Execution;
using ModelingEvolution.Harmony.ProcessManagement;
using Microsoft.Extensions.Logging.Abstractions;
using ZeroBuffer.Harmony.Tests;

namespace ZeroBuffer.Harmony.Tests.Cpp_Csharp;

public class StressTestsTests : HarmonyTestBase
{
    public StressTestsTests(ITestOutputHelper output) : base(output) { }

    #region Static Test Data
    private static readonly string Test_11_3_Long_Duration_Stress_Test_reader_cpp_writer_csharp_Json = @"{""TestId"":""cpp-csharp-test-11-3---long-duration-stress-test"",""FeatureId"":11,""ScenarioName"":""Test 11.3 - Long Duration Stress Test"",""ScenarioDescription"":null,""Tags"":[],""Platforms"":{""reader"":""cpp"",""writer"":""csharp""},""Background"":[{""Type"":""Given"",""Text"":""stress test environment is prepared"",""Process"":null,""ProcessedText"":""stress test environment is prepared"",""Parameters"":{}}],""Steps"":[{""Type"":""Given"",""Text"":""the \u0027reader\u0027 process creates buffer \u0027test-long-duration\u0027 with default config"",""Process"":""reader"",""ProcessedText"":""creates buffer \u0027test-long-duration\u0027 with default config"",""Parameters"":{}},{""Type"":""When"",""Text"":""the \u0027writer\u0027 process connects to buffer \u0027test-long-duration\u0027"",""Process"":""writer"",""ProcessedText"":""connects to buffer \u0027test-long-duration\u0027"",""Parameters"":{}},{""Type"":""When"",""Text"":""the test runs continuous write-read for \u002724\u0027 hours"",""Process"":""writer"",""ProcessedText"":""the test runs continuous write-read for \u002724\u0027 hours"",""Parameters"":{}},{""Type"":""Then"",""Text"":""verify no resource leaks"",""Process"":null,""ProcessedText"":""verify no resource leaks"",""Parameters"":{}},{""Type"":""Then"",""Text"":""verify sequence numbers handle overflow"",""Process"":""writer"",""ProcessedText"":""verify sequence numbers handle overflow"",""Parameters"":{}},{""Type"":""Then"",""Text"":""monitor system resource usage"",""Process"":""writer"",""ProcessedText"":""monitor system resource usage"",""Parameters"":{}},{""Type"":""Then"",""Text"":""ensure stable operation throughout"",""Process"":""writer"",""ProcessedText"":""ensure stable operation throughout"",""Parameters"":{}}]}";

    #endregion

    #region Scenarios Collection
    public static IEnumerable<ScenarioExecution> Scenarios => new[]
    {
        DeserializeScenarioStatic(Test_11_3_Long_Duration_Stress_Test_reader_cpp_writer_csharp_Json)
    };
    #endregion

    #region Test Methods
    [Fact(DisplayName = "Test 11.3 - Long Duration Stress Test [reader=cpp, writer=csharp]")]
    [Trait("Scenario", "Test 11.3 - Long Duration Stress Test")]
    [Trait("Platform", "cpp/csharp")]
    [Trait("Uses", "cpp")]
    [Trait("Uses", "csharp")]
    [Trait("Feature", "11-StressTests")]    public async Task Test_11_3_Long_Duration_Stress_Test_reader_cpp_writer_csharp()
    {
        var scenario = DeserializeScenario(Test_11_3_Long_Duration_Stress_Test_reader_cpp_writer_csharp_Json);
        await ExecuteScenarioAsync(scenario);
    }


    #endregion
}