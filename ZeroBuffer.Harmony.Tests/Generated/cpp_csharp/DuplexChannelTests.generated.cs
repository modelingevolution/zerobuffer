// <auto-generated />
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text.Json;
using System.Threading.Tasks;
using Xunit;
using Xunit.Abstractions;
using ModelingEvolution.Harmony.Core;
using ModelingEvolution.Harmony.Execution;
using ModelingEvolution.Harmony.ProcessManagement;
using Microsoft.Extensions.Logging.Abstractions;
using ZeroBuffer.Harmony.Tests;

namespace ZeroBuffer.Harmony.Tests.Cpp_Csharp;

public class DuplexChannelTests : HarmonyTestBase
{
    public DuplexChannelTests(ITestOutputHelper output) : base(output) { }

    #region Static Test Data
    private static readonly string Test_13_1_Basic_Request_Response_client_cpp_server_csharp_Json = @"{""TestId"":""cpp-csharp-test-13-1---basic-request-response"",""FeatureId"":13,""ScenarioName"":""Test 13.1 - Basic Request-Response"",""ScenarioDescription"":null,""Tags"":[],""Platforms"":{""client"":""cpp"",""server"":""csharp""},""Background"":[],""Steps"":[{""Type"":""Given"",""Text"":""the \u0027server\u0027 process creates immutable duplex channel \u0027duplex-basic\u0027 with metadata size \u00274096\u0027 and payload size \u00271048576\u0027"",""Process"":""server"",""ProcessedText"":""creates immutable duplex channel \u0027duplex-basic\u0027 with metadata size \u00274096\u0027 and payload size \u00271048576\u0027"",""Parameters"":{}},{""Type"":""Given"",""Text"":""the \u0027server\u0027 process starts echo handler"",""Process"":""server"",""ProcessedText"":""starts echo handler"",""Parameters"":{}},{""Type"":""When"",""Text"":""the \u0027client\u0027 process creates duplex channel client \u0027duplex-basic\u0027"",""Process"":""client"",""ProcessedText"":""creates duplex channel client \u0027duplex-basic\u0027"",""Parameters"":{}},{""Type"":""When"",""Text"":""the \u0027client\u0027 process sends request with size \u00271\u0027"",""Process"":""client"",""ProcessedText"":""sends request with size \u00271\u0027"",""Parameters"":{}},{""Type"":""Then"",""Text"":""response should match request with size \u00271\u0027"",""Process"":""client"",""ProcessedText"":""response should match request with size \u00271\u0027"",""Parameters"":{}},{""Type"":""When"",""Text"":""the \u0027client\u0027 process sends request with size \u00271024\u0027"",""Process"":""client"",""ProcessedText"":""sends request with size \u00271024\u0027"",""Parameters"":{}},{""Type"":""Then"",""Text"":""response should match request with size \u00271024\u0027"",""Process"":""client"",""ProcessedText"":""response should match request with size \u00271024\u0027"",""Parameters"":{}},{""Type"":""When"",""Text"":""the \u0027client\u0027 process sends request with size \u0027102400\u0027"",""Process"":""client"",""ProcessedText"":""sends request with size \u0027102400\u0027"",""Parameters"":{}},{""Type"":""Then"",""Text"":""response should match request with size \u0027102400\u0027"",""Process"":""client"",""ProcessedText"":""response should match request with size \u0027102400\u0027"",""Parameters"":{}}]}";
    private static readonly string Test_13_2_Request_Response_Order_Preservation_client_cpp_server_csharp_Json = @"{""TestId"":""cpp-csharp-test-13-2---request-response-order-preservation"",""FeatureId"":13,""ScenarioName"":""Test 13.2 - Request-Response Order Preservation"",""ScenarioDescription"":"""",""Tags"":[],""Platforms"":{""client"":""cpp"",""server"":""csharp""},""Background"":[],""Steps"":[{""Type"":""Given"",""Text"":""the \u0027server\u0027 process creates immutable duplex channel \u0027duplex-sequence\u0027 with default config"",""Process"":""server"",""ProcessedText"":""creates immutable duplex channel \u0027duplex-sequence\u0027 with default config"",""Parameters"":{}},{""Type"":""Given"",""Text"":""the \u0027server\u0027 process starts echo handler"",""Process"":""server"",""ProcessedText"":""starts echo handler"",""Parameters"":{}},{""Type"":""When"",""Text"":""the \u0027client\u0027 process creates duplex channel client \u0027duplex-sequence\u0027"",""Process"":""client"",""ProcessedText"":""creates duplex channel client \u0027duplex-sequence\u0027"",""Parameters"":{}},{""Type"":""When"",""Text"":""the \u0027client\u0027 process sends \u002710\u0027 requests sequentially"",""Process"":""client"",""ProcessedText"":""sends \u002710\u0027 requests sequentially"",""Parameters"":{}},{""Type"":""Then"",""Text"":""the \u0027client\u0027 process receives \u002710\u0027 responses in order"",""Process"":""client"",""ProcessedText"":""receives \u002710\u0027 responses in order"",""Parameters"":{}},{""Type"":""Then"",""Text"":""responses should match requests by content"",""Process"":""client"",""ProcessedText"":""responses should match requests by content"",""Parameters"":{}},{""Type"":""Then"",""Text"":""no responses should be lost or duplicated"",""Process"":""client"",""ProcessedText"":""no responses should be lost or duplicated"",""Parameters"":{}}]}";
    private static readonly string Test_13_3_Concurrent_Client_Operations_client_cpp_server_csharp_Json = @"{""TestId"":""cpp-csharp-test-13-3---concurrent-client-operations"",""FeatureId"":13,""ScenarioName"":""Test 13.3 - Concurrent Client Operations"",""ScenarioDescription"":null,""Tags"":[],""Platforms"":{""client"":""cpp"",""server"":""csharp""},""Background"":[],""Steps"":[{""Type"":""Given"",""Text"":""the \u0027server\u0027 process creates immutable duplex channel \u0027duplex-concurrent\u0027 with default config"",""Process"":""server"",""ProcessedText"":""creates immutable duplex channel \u0027duplex-concurrent\u0027 with default config"",""Parameters"":{}},{""Type"":""Given"",""Text"":""the \u0027server\u0027 process starts echo handler"",""Process"":""server"",""ProcessedText"":""starts echo handler"",""Parameters"":{}},{""Type"":""When"",""Text"":""the \u0027client\u0027 process creates duplex channel client \u0027duplex-concurrent\u0027"",""Process"":""client"",""ProcessedText"":""creates duplex channel client \u0027duplex-concurrent\u0027"",""Parameters"":{}},{""Type"":""When"",""Text"":""the \u0027client\u0027 process sends \u002720\u0027 requests from single thread"",""Process"":""client"",""ProcessedText"":""sends \u002720\u0027 requests from single thread"",""Parameters"":{}},{""Type"":""Then"",""Text"":""the \u0027client\u0027 process receives exactly \u002720\u0027 responses"",""Process"":""client"",""ProcessedText"":""receives exactly \u002720\u0027 responses"",""Parameters"":{}},{""Type"":""Then"",""Text"":""all \u002720\u0027 responses match their requests"",""Process"":""client"",""ProcessedText"":""all \u002720\u0027 responses match their requests"",""Parameters"":{}}]}";
    private static readonly string Test_13_4_Server_Processing_Mode_SingleThread_client_cpp_server_csharp_Json = @"{""TestId"":""cpp-csharp-test-13-4---server-processing-mode-singlethread"",""FeatureId"":13,""ScenarioName"":""Test 13.4 - Server Processing Mode SingleThread"",""ScenarioDescription"":null,""Tags"":[],""Platforms"":{""client"":""cpp"",""server"":""csharp""},""Background"":[],""Steps"":[{""Type"":""Given"",""Text"":""the \u0027server\u0027 process creates immutable duplex channel \u0027duplex-singlethread\u0027 with processing mode \u0027SingleThread\u0027"",""Process"":""server"",""ProcessedText"":""creates immutable duplex channel \u0027duplex-singlethread\u0027 with processing mode \u0027SingleThread\u0027"",""Parameters"":{}},{""Type"":""Given"",""Text"":""the \u0027server\u0027 process starts handler with \u0027100\u0027 ms processing time"",""Process"":""server"",""ProcessedText"":""starts handler with \u0027100\u0027 ms processing time"",""Parameters"":{}},{""Type"":""When"",""Text"":""the \u0027client\u0027 process creates duplex channel client \u0027duplex-singlethread\u0027"",""Process"":""client"",""ProcessedText"":""creates duplex channel client \u0027duplex-singlethread\u0027"",""Parameters"":{}},{""Type"":""When"",""Text"":""the \u0027client\u0027 process sends \u00273\u0027 requests sequentially"",""Process"":""client"",""ProcessedText"":""sends \u00273\u0027 requests sequentially"",""Parameters"":{}},{""Type"":""When"",""Text"":""the \u0027client\u0027 process measures total response time"",""Process"":""client"",""ProcessedText"":""measures total response time"",""Parameters"":{}},{""Type"":""Then"",""Text"":""total time should be at least \u0027300\u0027 ms"",""Process"":""client"",""ProcessedText"":""total time should be at least \u0027300\u0027 ms"",""Parameters"":{}},{""Type"":""Then"",""Text"":""responses should arrive in order"",""Process"":""client"",""ProcessedText"":""responses should arrive in order"",""Parameters"":{}}]}";
    private static readonly string Test_13_5_Server_Death_During_Processing_client_cpp_server_csharp_Json = @"{""TestId"":""cpp-csharp-test-13-5---server-death-during-processing"",""FeatureId"":13,""ScenarioName"":""Test 13.5 - Server Death During Processing"",""ScenarioDescription"":null,""Tags"":[],""Platforms"":{""client"":""cpp"",""server"":""csharp""},""Background"":[],""Steps"":[{""Type"":""Given"",""Text"":""the \u0027server\u0027 process creates immutable duplex channel \u0027duplex-crash\u0027 with default config"",""Process"":""server"",""ProcessedText"":""creates immutable duplex channel \u0027duplex-crash\u0027 with default config"",""Parameters"":{}},{""Type"":""Given"",""Text"":""the \u0027server\u0027 process starts handler that crashes after \u0027100\u0027 ms"",""Process"":""server"",""ProcessedText"":""starts handler that crashes after \u0027100\u0027 ms"",""Parameters"":{}},{""Type"":""When"",""Text"":""the \u0027client\u0027 process creates duplex channel client \u0027duplex-crash\u0027"",""Process"":""client"",""ProcessedText"":""creates duplex channel client \u0027duplex-crash\u0027"",""Parameters"":{}},{""Type"":""When"",""Text"":""the \u0027client\u0027 process sends request of \u00271024\u0027 bytes"",""Process"":""client"",""ProcessedText"":""sends request of \u00271024\u0027 bytes"",""Parameters"":{}},{""Type"":""Then"",""Text"":""the \u0027server\u0027 process simulates crash during processing"",""Process"":""server"",""ProcessedText"":""simulates crash during processing"",""Parameters"":{}},{""Type"":""When"",""Text"":""the \u0027client\u0027 process waits for response with timeout \u00275\u0027 seconds"",""Process"":""client"",""ProcessedText"":""waits for response with timeout \u00275\u0027 seconds"",""Parameters"":{}},{""Type"":""Then"",""Text"":""the \u0027client\u0027 process should detect server death"",""Process"":""client"",""ProcessedText"":""should detect server death"",""Parameters"":{}},{""Type"":""Then"",""Text"":""an appropriate exception should be thrown"",""Process"":""client"",""ProcessedText"":""an appropriate exception should be thrown"",""Parameters"":{}}]}";
    private static readonly string Test_13_6_Buffer_Full_on_Response_Channel_client_cpp_server_csharp_Json = @"{""TestId"":""cpp-csharp-test-13-6---buffer-full-on-response-channel"",""FeatureId"":13,""ScenarioName"":""Test 13.6 - Buffer Full on Response Channel"",""ScenarioDescription"":null,""Tags"":[],""Platforms"":{""client"":""cpp"",""server"":""csharp""},""Background"":[],""Steps"":[{""Type"":""Given"",""Text"":""the \u0027server\u0027 process creates immutable duplex channel \u0027duplex-full\u0027 with metadata size \u00271024\u0027 and payload size \u002710240\u0027"",""Process"":""server"",""ProcessedText"":""creates immutable duplex channel \u0027duplex-full\u0027 with metadata size \u00271024\u0027 and payload size \u002710240\u0027"",""Parameters"":{}},{""Type"":""Given"",""Text"":""the \u0027server\u0027 process starts handler that doubles request size"",""Process"":""server"",""ProcessedText"":""starts handler that doubles request size"",""Parameters"":{}},{""Type"":""When"",""Text"":""the \u0027client\u0027 process creates duplex channel client \u0027duplex-full\u0027"",""Process"":""client"",""ProcessedText"":""creates duplex channel client \u0027duplex-full\u0027"",""Parameters"":{}},{""Type"":""When"",""Text"":""the \u0027client\u0027 process sends request with size \u00274096\u0027"",""Process"":""client"",""ProcessedText"":""sends request with size \u00274096\u0027"",""Parameters"":{}},{""Type"":""When"",""Text"":""the \u0027client\u0027 process does not read responses"",""Process"":""client"",""ProcessedText"":""does not read responses"",""Parameters"":{}},{""Type"":""Then"",""Text"":""the \u0027server\u0027 process attempts to send response of \u00278192\u0027 bytes"",""Process"":""server"",""ProcessedText"":""attempts to send response of \u00278192\u0027 bytes"",""Parameters"":{}},{""Type"":""Then"",""Text"":""the \u0027server\u0027 process should block on response write"",""Process"":""server"",""ProcessedText"":""should block on response write"",""Parameters"":{}},{""Type"":""When"",""Text"":""the \u0027client\u0027 process reads one response"",""Process"":""client"",""ProcessedText"":""reads one response"",""Parameters"":{}},{""Type"":""Then"",""Text"":""the \u0027server\u0027 process should unblock and complete write"",""Process"":""server"",""ProcessedText"":""should unblock and complete write"",""Parameters"":{}}]}";
    private static readonly string Test_13_7_Zero_Copy_Client_Operations_client_cpp_server_csharp_Json = @"{""TestId"":""cpp-csharp-test-13-7---zero-copy-client-operations"",""FeatureId"":13,""ScenarioName"":""Test 13.7 - Zero-Copy Client Operations"",""ScenarioDescription"":null,""Tags"":[],""Platforms"":{""client"":""cpp"",""server"":""csharp""},""Background"":[],""Steps"":[{""Type"":""Given"",""Text"":""the \u0027server\u0027 process creates immutable duplex channel \u0027duplex-zerocopy\u0027 with default config"",""Process"":""server"",""ProcessedText"":""creates immutable duplex channel \u0027duplex-zerocopy\u0027 with default config"",""Parameters"":{}},{""Type"":""Given"",""Text"":""the \u0027server\u0027 process starts echo handler"",""Process"":""server"",""ProcessedText"":""starts echo handler"",""Parameters"":{}},{""Type"":""When"",""Text"":""the \u0027client\u0027 process creates duplex channel client \u0027duplex-zerocopy\u0027"",""Process"":""client"",""ProcessedText"":""creates duplex channel client \u0027duplex-zerocopy\u0027"",""Parameters"":{}},{""Type"":""When"",""Text"":""the \u0027client\u0027 process acquires zero-copy request buffer of size \u00274096\u0027"",""Process"":""client"",""ProcessedText"":""acquires zero-copy request buffer of size \u00274096\u0027"",""Parameters"":{}},{""Type"":""When"",""Text"":""the \u0027client\u0027 process fills buffer with test pattern"",""Process"":""client"",""ProcessedText"":""fills buffer with test pattern"",""Parameters"":{}},{""Type"":""When"",""Text"":""the \u0027client\u0027 process commits request"",""Process"":""client"",""ProcessedText"":""commits request"",""Parameters"":{}},{""Type"":""Then"",""Text"":""response should contain same test pattern"",""Process"":""client"",""ProcessedText"":""response should contain same test pattern"",""Parameters"":{}},{""Type"":""Then"",""Text"":""no memory allocations in send path"",""Process"":""client"",""ProcessedText"":""no memory allocations in send path"",""Parameters"":{}}]}";
    private static readonly string Test_13_8_Immutable_Server_Handler_Types_client_cpp_server_csharp_Json = @"{""TestId"":""cpp-csharp-test-13-8---immutable-server-handler-types"",""FeatureId"":13,""ScenarioName"":""Test 13.8 - Immutable Server Handler Types"",""ScenarioDescription"":"""",""Tags"":[],""Platforms"":{""client"":""cpp"",""server"":""csharp""},""Background"":[],""Steps"":[{""Type"":""Given"",""Text"":""the \u0027server\u0027 process creates immutable duplex channel \u0027duplex-transform\u0027 with default config"",""Process"":""server"",""ProcessedText"":""creates immutable duplex channel \u0027duplex-transform\u0027 with default config"",""Parameters"":{}},{""Type"":""Given"",""Text"":""the \u0027server\u0027 process starts handler that implements XOR with key \u00270xFF\u0027"",""Process"":""server"",""ProcessedText"":""starts handler that implements XOR with key \u00270xFF\u0027"",""Parameters"":{}},{""Type"":""When"",""Text"":""the \u0027client\u0027 process creates duplex channel client \u0027duplex-transform\u0027"",""Process"":""client"",""ProcessedText"":""creates duplex channel client \u0027duplex-transform\u0027"",""Parameters"":{}},{""Type"":""When"",""Text"":""the \u0027client\u0027 process sends \u002710240\u0027 byte frame with test pattern"",""Process"":""client"",""ProcessedText"":""sends \u002710240\u0027 byte frame with test pattern"",""Parameters"":{}},{""Type"":""Then"",""Text"":""response should contain XOR transformed data"",""Process"":""client"",""ProcessedText"":""response should contain XOR transformed data"",""Parameters"":{}},{""Type"":""Then"",""Text"":""the server handler receives immutable request frame"",""Process"":""client"",""ProcessedText"":""the server handler receives immutable request frame"",""Parameters"":{}},{""Type"":""Then"",""Text"":""the server handler returns new response data"",""Process"":""client"",""ProcessedText"":""the server handler returns new response data"",""Parameters"":{}}]}";
    private static readonly string Test_13_9_Client_Death_During_Response_Wait_client_cpp_server_csharp_Json = @"{""TestId"":""cpp-csharp-test-13-9---client-death-during-response-wait"",""FeatureId"":13,""ScenarioName"":""Test 13.9 - Client Death During Response Wait"",""ScenarioDescription"":null,""Tags"":[],""Platforms"":{""client"":""cpp"",""server"":""csharp""},""Background"":[],""Steps"":[{""Type"":""Given"",""Text"":""the \u0027server\u0027 process creates immutable duplex channel \u0027duplex-client-crash\u0027 with default config"",""Process"":""server"",""ProcessedText"":""creates immutable duplex channel \u0027duplex-client-crash\u0027 with default config"",""Parameters"":{}},{""Type"":""Given"",""Text"":""the \u0027server\u0027 process starts handler with \u00272\u0027 second processing delay"",""Process"":""server"",""ProcessedText"":""starts handler with \u00272\u0027 second processing delay"",""Parameters"":{}},{""Type"":""When"",""Text"":""the \u0027client\u0027 process creates duplex channel client \u0027duplex-client-crash\u0027"",""Process"":""client"",""ProcessedText"":""creates duplex channel client \u0027duplex-client-crash\u0027"",""Parameters"":{}},{""Type"":""When"",""Text"":""the \u0027client\u0027 process sends request"",""Process"":""client"",""ProcessedText"":""sends request"",""Parameters"":{}},{""Type"":""When"",""Text"":""the \u0027client\u0027 process simulates crash after \u00271\u0027 second"",""Process"":""client"",""ProcessedText"":""simulates crash after \u00271\u0027 second"",""Parameters"":{}},{""Type"":""Then"",""Text"":""the \u0027server\u0027 process completes processing after \u00272\u0027 seconds"",""Process"":""server"",""ProcessedText"":""completes processing after \u00272\u0027 seconds"",""Parameters"":{}},{""Type"":""Then"",""Text"":""the \u0027server\u0027 process attempts to send response"",""Process"":""server"",""ProcessedText"":""attempts to send response"",""Parameters"":{}},{""Type"":""Then"",""Text"":""the \u0027server\u0027 process detects client death when writing"",""Process"":""server"",""ProcessedText"":""detects client death when writing"",""Parameters"":{}},{""Type"":""Then"",""Text"":""the \u0027server\u0027 process continues processing other requests"",""Process"":""server"",""ProcessedText"":""continues processing other requests"",""Parameters"":{}}]}";
    private static readonly string Test_13_10_Channel_Cleanup_on_Dispose_client_cpp_server_csharp_Json = @"{""TestId"":""cpp-csharp-test-13-10---channel-cleanup-on-dispose"",""FeatureId"":13,""ScenarioName"":""Test 13.10 - Channel Cleanup on Dispose"",""ScenarioDescription"":null,""Tags"":[],""Platforms"":{""client"":""cpp"",""server"":""csharp""},""Background"":[],""Steps"":[{""Type"":""Given"",""Text"":""the \u0027server\u0027 process creates immutable duplex channel \u0027duplex-cleanup\u0027 with default config"",""Process"":""server"",""ProcessedText"":""creates immutable duplex channel \u0027duplex-cleanup\u0027 with default config"",""Parameters"":{}},{""Type"":""Given"",""Text"":""the \u0027server\u0027 process starts echo handler"",""Process"":""server"",""ProcessedText"":""starts echo handler"",""Parameters"":{}},{""Type"":""When"",""Text"":""the \u0027client\u0027 process creates duplex channel client \u0027duplex-cleanup\u0027"",""Process"":""client"",""ProcessedText"":""creates duplex channel client \u0027duplex-cleanup\u0027"",""Parameters"":{}},{""Type"":""When"",""Text"":""the \u0027client\u0027 process sends \u00275\u0027 requests"",""Process"":""client"",""ProcessedText"":""sends \u00275\u0027 requests"",""Parameters"":{}},{""Type"":""When"",""Text"":""the \u0027client\u0027 process receives \u00273\u0027 responses"",""Process"":""client"",""ProcessedText"":""receives \u00273\u0027 responses"",""Parameters"":{}},{""Type"":""Then"",""Text"":""the \u0027server\u0027 process disposes server while \u00272\u0027 responses pending"",""Process"":""server"",""ProcessedText"":""disposes server while \u00272\u0027 responses pending"",""Parameters"":{}},{""Type"":""When"",""Text"":""the \u0027client\u0027 process attempts to receive pending responses"",""Process"":""client"",""ProcessedText"":""attempts to receive pending responses"",""Parameters"":{}},{""Type"":""Then"",""Text"":""the \u0027client\u0027 process should receive exception on pending"",""Process"":""client"",""ProcessedText"":""should receive exception on pending"",""Parameters"":{}},{""Type"":""Then"",""Text"":""all shared memory should be cleaned up"",""Process"":""client"",""ProcessedText"":""all shared memory should be cleaned up"",""Parameters"":{}},{""Type"":""When"",""Text"":""a new \u0027server\u0027 process creates immutable duplex channel \u0027duplex-cleanup\u0027"",""Process"":""client"",""ProcessedText"":""a new \u0027server\u0027 process creates immutable duplex channel \u0027duplex-cleanup\u0027"",""Parameters"":{}},{""Type"":""Then"",""Text"":""the new server should reuse same channel name successfully"",""Process"":""client"",""ProcessedText"":""the new server should reuse same channel name successfully"",""Parameters"":{}}]}";

    #endregion

    #region Scenarios Collection
    public static IEnumerable<ScenarioExecution> Scenarios => new[]
    {
        DeserializeScenarioStatic(Test_13_1_Basic_Request_Response_client_cpp_server_csharp_Json),
        DeserializeScenarioStatic(Test_13_2_Request_Response_Order_Preservation_client_cpp_server_csharp_Json),
        DeserializeScenarioStatic(Test_13_3_Concurrent_Client_Operations_client_cpp_server_csharp_Json),
        DeserializeScenarioStatic(Test_13_4_Server_Processing_Mode_SingleThread_client_cpp_server_csharp_Json),
        DeserializeScenarioStatic(Test_13_5_Server_Death_During_Processing_client_cpp_server_csharp_Json),
        DeserializeScenarioStatic(Test_13_6_Buffer_Full_on_Response_Channel_client_cpp_server_csharp_Json),
        DeserializeScenarioStatic(Test_13_7_Zero_Copy_Client_Operations_client_cpp_server_csharp_Json),
        DeserializeScenarioStatic(Test_13_8_Immutable_Server_Handler_Types_client_cpp_server_csharp_Json),
        DeserializeScenarioStatic(Test_13_9_Client_Death_During_Response_Wait_client_cpp_server_csharp_Json),
        DeserializeScenarioStatic(Test_13_10_Channel_Cleanup_on_Dispose_client_cpp_server_csharp_Json)
    };
    #endregion

    #region Test Methods
    [Fact(DisplayName = "Test 13.1 - Basic Request-Response [client=cpp, server=csharp]")]
    [Trait("Scenario", "Test 13.1 - Basic Request-Response")]
    [Trait("Platform", "cpp/csharp")]
    [Trait("Uses", "cpp")]
    [Trait("Uses", "csharp")]
    [Trait("Feature", "13-DuplexChannel")]    public async Task Test_13_1_Basic_Request_Response_client_cpp_server_csharp()
    {
        var scenario = DeserializeScenario(Test_13_1_Basic_Request_Response_client_cpp_server_csharp_Json);
        await ExecuteScenarioAsync(scenario);
    }

    [Fact(DisplayName = "Test 13.2 - Request-Response Order Preservation [client=cpp, server=csharp]")]
    [Trait("Scenario", "Test 13.2 - Request-Response Order Preservation")]
    [Trait("Platform", "cpp/csharp")]
    [Trait("Uses", "cpp")]
    [Trait("Uses", "csharp")]
    [Trait("Feature", "13-DuplexChannel")]    public async Task Test_13_2_Request_Response_Order_Preservation_client_cpp_server_csharp()
    {
        var scenario = DeserializeScenario(Test_13_2_Request_Response_Order_Preservation_client_cpp_server_csharp_Json);
        await ExecuteScenarioAsync(scenario);
    }

    [Fact(DisplayName = "Test 13.3 - Concurrent Client Operations [client=cpp, server=csharp]")]
    [Trait("Scenario", "Test 13.3 - Concurrent Client Operations")]
    [Trait("Platform", "cpp/csharp")]
    [Trait("Uses", "cpp")]
    [Trait("Uses", "csharp")]
    [Trait("Feature", "13-DuplexChannel")]    public async Task Test_13_3_Concurrent_Client_Operations_client_cpp_server_csharp()
    {
        var scenario = DeserializeScenario(Test_13_3_Concurrent_Client_Operations_client_cpp_server_csharp_Json);
        await ExecuteScenarioAsync(scenario);
    }

    [Fact(DisplayName = "Test 13.4 - Server Processing Mode SingleThread [client=cpp, server=csharp]")]
    [Trait("Scenario", "Test 13.4 - Server Processing Mode SingleThread")]
    [Trait("Platform", "cpp/csharp")]
    [Trait("Uses", "cpp")]
    [Trait("Uses", "csharp")]
    [Trait("Feature", "13-DuplexChannel")]    public async Task Test_13_4_Server_Processing_Mode_SingleThread_client_cpp_server_csharp()
    {
        var scenario = DeserializeScenario(Test_13_4_Server_Processing_Mode_SingleThread_client_cpp_server_csharp_Json);
        await ExecuteScenarioAsync(scenario);
    }

    [Fact(DisplayName = "Test 13.5 - Server Death During Processing [client=cpp, server=csharp]")]
    [Trait("Scenario", "Test 13.5 - Server Death During Processing")]
    [Trait("Platform", "cpp/csharp")]
    [Trait("Uses", "cpp")]
    [Trait("Uses", "csharp")]
    [Trait("Feature", "13-DuplexChannel")]    public async Task Test_13_5_Server_Death_During_Processing_client_cpp_server_csharp()
    {
        var scenario = DeserializeScenario(Test_13_5_Server_Death_During_Processing_client_cpp_server_csharp_Json);
        await ExecuteScenarioAsync(scenario);
    }

    [Fact(DisplayName = "Test 13.6 - Buffer Full on Response Channel [client=cpp, server=csharp]")]
    [Trait("Scenario", "Test 13.6 - Buffer Full on Response Channel")]
    [Trait("Platform", "cpp/csharp")]
    [Trait("Uses", "cpp")]
    [Trait("Uses", "csharp")]
    [Trait("Feature", "13-DuplexChannel")]    public async Task Test_13_6_Buffer_Full_on_Response_Channel_client_cpp_server_csharp()
    {
        var scenario = DeserializeScenario(Test_13_6_Buffer_Full_on_Response_Channel_client_cpp_server_csharp_Json);
        await ExecuteScenarioAsync(scenario);
    }

    [Fact(DisplayName = "Test 13.7 - Zero-Copy Client Operations [client=cpp, server=csharp]")]
    [Trait("Scenario", "Test 13.7 - Zero-Copy Client Operations")]
    [Trait("Platform", "cpp/csharp")]
    [Trait("Uses", "cpp")]
    [Trait("Uses", "csharp")]
    [Trait("Feature", "13-DuplexChannel")]    public async Task Test_13_7_Zero_Copy_Client_Operations_client_cpp_server_csharp()
    {
        var scenario = DeserializeScenario(Test_13_7_Zero_Copy_Client_Operations_client_cpp_server_csharp_Json);
        await ExecuteScenarioAsync(scenario);
    }

    [Fact(DisplayName = "Test 13.8 - Immutable Server Handler Types [client=cpp, server=csharp]")]
    [Trait("Scenario", "Test 13.8 - Immutable Server Handler Types")]
    [Trait("Platform", "cpp/csharp")]
    [Trait("Uses", "cpp")]
    [Trait("Uses", "csharp")]
    [Trait("Feature", "13-DuplexChannel")]    public async Task Test_13_8_Immutable_Server_Handler_Types_client_cpp_server_csharp()
    {
        var scenario = DeserializeScenario(Test_13_8_Immutable_Server_Handler_Types_client_cpp_server_csharp_Json);
        await ExecuteScenarioAsync(scenario);
    }

    [Fact(DisplayName = "Test 13.9 - Client Death During Response Wait [client=cpp, server=csharp]")]
    [Trait("Scenario", "Test 13.9 - Client Death During Response Wait")]
    [Trait("Platform", "cpp/csharp")]
    [Trait("Uses", "cpp")]
    [Trait("Uses", "csharp")]
    [Trait("Feature", "13-DuplexChannel")]    public async Task Test_13_9_Client_Death_During_Response_Wait_client_cpp_server_csharp()
    {
        var scenario = DeserializeScenario(Test_13_9_Client_Death_During_Response_Wait_client_cpp_server_csharp_Json);
        await ExecuteScenarioAsync(scenario);
    }

    [Fact(DisplayName = "Test 13.10 - Channel Cleanup on Dispose [client=cpp, server=csharp]")]
    [Trait("Scenario", "Test 13.10 - Channel Cleanup on Dispose")]
    [Trait("Platform", "cpp/csharp")]
    [Trait("Uses", "cpp")]
    [Trait("Uses", "csharp")]
    [Trait("Feature", "13-DuplexChannel")]    public async Task Test_13_10_Channel_Cleanup_on_Dispose_client_cpp_server_csharp()
    {
        var scenario = DeserializeScenario(Test_13_10_Channel_Cleanup_on_Dispose_client_cpp_server_csharp_Json);
        await ExecuteScenarioAsync(scenario);
    }


    #endregion
}