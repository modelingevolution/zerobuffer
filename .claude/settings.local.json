{
  "$schema": "https://json.schemastore.org/claude-code-settings.json",
  "permissions": {
    "allow": [
      "Bash(find:*)",
      "Bash(make test:*)",
      "Bash(ctest:*)",
      "Bash(./tests/test_resource_cleanup:*)",
      "Bash(make:*)",
      "Bash(./tests/test_zerobuffer:*)",
      "Bash(cmake:*)",
      "Bash(./tests/test_debug_buffer_full:*)",
      "Bash(./tests/test_scenarios:*)",
      "Bash(chmod:*)",
      "Bash(./benchmarks/benchmark_latency:*)",
      "Bash(./clean.sh)",
      "Bash(./build_release.sh:*)",
      "Bash(./benchmarks/benchmark_throughput:*)",
      "Bash(./benchmarks/benchmark_scenarios:*)",
      "Bash(./benchmarks/benchmark_video)",
      "Bash(ls:*)",
      "Bash(./benchmarks/benchmark_video:*)",
      "Bash(../run_video_benchmarks.sh)",
      "Bash(g++:*)",
      "Bash(./simple_bench)",
      "Bash(./benchmarks/simple_bench:*)",
      "Bash(ldd:*)",
      "Bash(./build_debug.sh:*)",
      "Bash(./run_all_tests.sh)",
      "Bash(./run_benchmarks.sh)",
      "Bash(./run_video_benchmarks.sh:*)",
      "Bash(./benchmark_latency:*)",
      "Bash(timeout:*)",
      "Bash(echo:*)",
      "Bash(./test_frame_too_large)",
      "Bash(./reproduce_benchmark_failure)",
      "Bash(ipcs:*)",
      "Bash(./benchmark_throughput:*)",
      "Bash(rm:*)",
      "Bash(./build.sh)",
      "Bash(./test.sh:*)",
      "Bash(dotnet test)",
      "Bash(mkdir:*)",
      "Bash(dotnet build)",
      "Bash(dotnet test:*)",
      "Bash(dotnet build:*)",
      "Bash(cp:*)",
      "Bash(dotnet run:*)",
      "Bash(python3 -m pip install:*)",
      "Bash(python3:*)",
      "Bash(source:*)",
      "Bash(pip install:*)",
      "Bash(python run_tests.py:*)",
      "Bash(python -m pytest tests/test_zerobuffer.py::TestTypes -v)",
      "Bash(python -m pytest tests/test_zerobuffer.py::TestReaderWriter::test_create_reader -v -s)",
      "Bash(mv:*)",
      "Bash(./run_unit_tests.sh:*)",
      "Bash(python -m pytest tests/test_zerobuffer.py::TestReaderWriter::test_metadata_write_read -v -s)",
      "Bash(python:*)",
      "Bash(./run_integration_tests.sh:*)",
      "Bash(./ZeroBuffer.Benchmarks)",
      "Bash(# Start relay process\n./ZeroBuffer.TestHelper relay relay-input relay-output &\nRELAY_PID=$!\nsleep 2\n\n# Start a reader on relay-output\n./ZeroBuffer.TestHelper reader relay-output &\nREADER_PID=$!\nsleep 1\n\n# Start a writer to relay-input\n./ZeroBuffer.TestHelper writer relay-input\n\nsleep 1\nkill $READER_PID $RELAY_PID 2>/dev/null)",
      "Bash(./venv/bin/python -m pytest tests/test_zerobuffer.py -v)",
      "Bash(./build.sh:*)",
      "Bash(./tests/test_zerocopy:*)",
      "Bash(./venv/bin/python -m pytest tests/test_zerobuffer.py -v --tb=short)",
      "Bash(./venv/bin/python -m pytest tests/test_scenarios.py -v --tb=short -x)",
      "Bash(./test-lockfree.sh:*)",
      "Bash(./venv/bin/python -m pytest tests/test_scenarios.py::TestScenario1BasicDataTransfer -v)",
      "Bash(./venv/bin/python -m pytest tests/test_scenarios.py::TestScenario2ContinuousStreaming -v)",
      "Bash(./venv/bin/python -m pytest tests/test_scenarios.py::TestScenario4WrapAround -v)",
      "Bash(./venv/bin/python -m pytest tests/test_zerobuffer.py -q)",
      "Bash(dotnet clean:*)",
      "Bash(dotnet nuget locals:*)",
      "Bash(dotnet restore:*)",
      "Bash(./venv/bin/python -m pytest tests/test_scenarios.py::TestScenario3BufferFullCondition -v)",
      "Bash(pkill:*)",
      "Bash(true)",
      "Bash(./venv/bin/python test_debug.py:*)",
      "Bash(./venv/bin/python -m pytest tests/test_scenarios.py -v --tb=short)",
      "Bash(./benchmark_roundtrip)",
      "Bash(./venv/bin/python -m pytest tests/test_scenarios.py::TestScenario3BufferFullCondition::test_buffer_full_blocking -v -s)",
      "Bash(./venv/bin/python -m pytest tests/test_scenarios.py::TestScenario3BufferFullCondition::test_buffer_full_blocking -v)",
      "Bash(./venv/bin/python:*)",
      "Bash(./tests/test_free_space_accounting:*)",
      "Bash(./tests/test_free_space_debug:*)",
      "Bash(./tests/test_debug_wrap:*)",
      "Bash(./tests/test_minimal_debug)",
      "Bash(wait)",
      "Bash(./venv/bin/pip install -e . --quiet)",
      "Bash(./venv/bin/pip install pytest pytest-timeout --quiet)",
      "Bash(./venv/bin/pip install posix-ipc --quiet)",
      "Bash(./test_simple_bench)",
      "Bash(./relay_process)",
      "Bash(./compare_methods)",
      "Bash(./run_test.sh)",
      "Bash(./run_test_debug.sh:*)",
      "Bash(./run_test_realistic.sh:*)",
      "Bash(cat:*)",
      "Bash(./test_cpp_writer_csharp_reader.sh:*)",
      "Bash(./verify_wrap_around.sh:*)",
      "Bash(./test_simple_wrap.sh:*)",
      "Bash(./test_csharp_cpp_writer_reader.sh:*)",
      "Bash(./debug_wrap_around.sh:*)",
      "Bash(./tests/zerobuffer-test-writer test_buffer:*)",
      "Bash(./tests/test_exact_wrap_debug:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git push:*)",
      "Bash(gh repo view:*)",
      "Bash(git tag:*)",
      "Bash(git remote set-url:*)",
      "Bash(gh ssh-key add:*)",
      "Bash(gh run list:*)",
      "Bash(gh run view:*)",
      "Bash(./run_round_trip.sh:*)",
      "Bash(./ZeroBuffer.CrossPlatform reader test_buffer:*)",
      "Bash(./run_round_trip_debug.sh:*)",
      "Bash(./run_round_trip_fps.sh:*)",
      "Bash(./run_round_trip_reverse.sh:*)",
      "Bash(gh api:*)",
      "Bash(gh run cancel:*)",
      "Bash(./test_csharp_to_cpp.sh:*)",
      "Bash(./test_cpp_csharp_cpp.sh:*)",
      "Bash(./test_full_roundtrip.sh:*)",
      "Bash(./benchmarks/benchmark_roundtrip:*)",
      "Bash(./test_simple_roundtrip.sh:*)",
      "Bash(./run_full_test.sh)",
      "Bash(./test_cpp_to_csharp.sh:*)",
      "Bash(git checkout:*)",
      "Bash(./tests/zerobuffer-test-reader:*)",
      "Bash(gh workflow run:*)",
      "Bash(gh run download:*)",
      "Bash(./test_venv/bin/python -m pytest tests/test_zerobuffer.py::TestReaderWriter -v -s)",
      "Bash(./test_venv2/bin/pip install -e . pytest posix-ipc)",
      "Bash(./test_venv2/bin/python -m pytest tests/test_zerobuffer.py::TestReaderWriter -v -s)",
      "Bash(./test_venv2/bin/python -m pytest tests/test_zerobuffer.py::TestFrameOperations -v -s)",
      "WebFetch(domain:github.com)",
      "Bash(sed:*)",
      "Bash(./test_venv2/bin/pip install -q -e . pytest posix-ipc)",
      "Bash(./test_venv2/bin/python -m pytest tests/test_zerobuffer.py::TestTypes tests/test_zerobuffer.py::TestReaderWriter tests/test_zerobuffer.py::TestFrameOperations --collect-only)",
      "Bash(./test_with_relay.sh)",
      "Bash(git merge:*)",
      "Bash(./tests/zerobuffer-test-writer:*)",
      "Bash(./ZeroBuffer.CrossPlatform writer:*)",
      "Bash(./ZeroBuffer.CrossPlatform reader:*)",
      "Bash(grep:*)",
      "Bash(./zerobuffer-test-reader:*)",
      "Bash(/mnt/d/source/modelingevolution/streamer/src/zerobuffer/cpp/build/tests/zerobuffer-test-reader --help)",
      "Bash(/mnt/d/source/modelingevolution/streamer/src/zerobuffer/cpp/build/tests/zerobuffer-test-writer:*)",
      "Bash(/mnt/d/source/modelingevolution/streamer/src/zerobuffer/cpp/build/benchmarks/relay_process --help)",
      "WebFetch(domain:learn.microsoft.com)",
      "Bash(./setup-custom-vcpkg-registry.sh:*)",
      "Bash(vcpkg install:*)",
      "Bash(./simple-test)",
      "Bash(git init:*)",
      "Bash(./test-minimal)",
      "Bash(cat:*)",
      "Bash(./test_direct)",
      "Bash(vcpkg:*)",
      "Bash(git rev-parse:*)",
      "Bash(VCPKG_MAX_CONCURRENCY=1 vcpkg install)",
      "Bash(git clone:*)",
      "Bash(git remote add:*)",
      "Bash(wget:*)",
      "Bash(git checkout:*)",
      "Bash(sudo rm:*)",
      "Bash(git add:*)",
      "Bash(./venv/bin/pip install -e . pytest pytest-timeout posix-ipc --quiet)",
      "Bash(grep:*)",
      "Bash(./tests/test_duplex_channel)",
      "Bash(./tests/test_duplex_simple:*)",
      "Bash(./build/tests/test_duplex_simple:*)",
      "Bash(./tests/test_duplex_channel:*)",
      "Bash(git checkout:*)",
      "Bash(./examples/example_metadata:*)",
      "Bash(dotnet add:*)",
      "Bash(./test-jsonrpc.sh:*)",
      "WebFetch(domain:docs.specflow.org)",
      "Bash(dotnet list:*)",
      "Bash(dotnet sln add:*)",
      "Bash(../run-single-test.sh)",
      "Bash(./test-serve-directly.sh:*)",
      "Bash(for:*)",
      "Bash(do sed -i '/Given the test mode is configured/d' \"$f\")",
      "Bash(done)",
      "Bash(./ZeroBuffer.Serve --help)",
      "Bash(dotnet script:*)",
      "Bash(./test_venv/bin/pip install -e . --quiet)",
      "Bash(./test_venv/bin/pip install pydantic --quiet)",
      "Bash(./test_venv/bin/pip install posix-ipc --quiet)",
      "Bash(./test_venv/bin/python:*)",
      "Bash(/mnt/d/source/modelingevolution/streamer/src/zerobuffer/fix-platform-steps.sh)",
      "Bash(./test_zerobuffer_integration.py)",
      "Bash(./run_harmony_test.py)",
      "Bash(touch:*)",
      "Bash(touch:*)",
      "Bash(../venv/bin/python -m pytest test_basic_communication.py::TestBasicCommunication::test_1_1_simple_write_read_cycle -v -s)",
      "Bash(./venv/bin/pip install pytest-asyncio --quiet)",
      "Bash(../venv/bin/python -m pytest test_basic_communication.py -v)",
      "Bash(venv/bin/python -m pytest tests/test_basic_communication.py::TestBasicCommunication::test_1_2_multiple_frames_sequential -v -s --tb=short)",
      "Bash(do sed -i '1i using System;' \"$f\")",
      "Bash(do sed -i '2i using System.Collections.Generic;' \"$f\")",
      "Bash(do sed:*)"
    ],
    "deny": []
  }
}